"use strict";(self.webpackChunk_kne_components_react_form=self.webpackChunk_kne_components_react_form||[]).push([[666],{69666:(n,t,e)=>{e.d(t,{A:()=>d});var o=e(23517),r=e(55199);const d={name:"react-form",summary:"<p>react-form\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684React\u8868\u5355\u5e93\uff0c\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u8868\u5355\u72b6\u6001\u7ba1\u7406\u3001\u9a8c\u8bc1\u548c\u63d0\u4ea4\u89e3\u51b3\u65b9\u6848\u3002</p>\n<h3>\u6838\u5fc3\u7279\u6027</h3>\n<h4>\u72b6\u6001\u7ba1\u7406</h4>\n<ul>\n<li>\u4f7f\u7528React\u7684\u72b6\u6001\u7ba1\u7406\u673a\u5236\u7ba1\u7406\u8868\u5355\u72b6\u6001</li>\n<li>\u652f\u6301\u590d\u6742\u7684\u8868\u5355\u72b6\u6001\u7ed3\u6784</li>\n<li>\u63d0\u4f9b\u8868\u5355\u72b6\u6001\u7684\u5b9e\u65f6\u66f4\u65b0\u548c\u8bbf\u95ee</li>\n</ul>\n<h4>\u4e8b\u4ef6\u7cfb\u7edf</h4>\n<ul>\n<li>\u4f7f\u7528\u4e8b\u4ef6\u53d1\u5c04\u5668\u6a21\u5f0f\u5b9e\u73b0\u8868\u5355\u5185\u90e8\u901a\u4fe1</li>\n<li>\u652f\u6301\u591a\u79cd\u8868\u5355\u4e8b\u4ef6\uff0c\u5982\u63d0\u4ea4\u3001\u9a8c\u8bc1\u3001\u91cd\u7f6e\u7b49</li>\n<li>\u5141\u8bb8\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u5904\u7406\u903b\u8f91</li>\n</ul>\n<h4>\u5b57\u6bb5\u7ba1\u7406</h4>\n<ul>\n<li>\u52a8\u6001\u6dfb\u52a0\u3001\u66f4\u65b0\u548c\u79fb\u9664\u8868\u5355\u5b57\u6bb5</li>\n<li>\u652f\u6301\u5b57\u6bb5\u7ea7\u522b\u7684\u72b6\u6001\u7ba1\u7406</li>\n<li>\u63d0\u4f9b\u5b57\u6bb5\u503c\u7684\u83b7\u53d6\u548c\u8bbe\u7f6e\u65b9\u6cd5</li>\n</ul>\n<h4>\u9a8c\u8bc1\u7cfb\u7edf</h4>\n<ul>\n<li>\u652f\u6301\u8868\u5355\u548c\u5b57\u6bb5\u7ea7\u522b\u7684\u9a8c\u8bc1</li>\n<li>\u63d0\u4f9b\u5185\u7f6e\u9a8c\u8bc1\u89c4\u5219</li>\n<li>\u652f\u6301\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u903b\u8f91</li>\n<li>\u5b9e\u65f6\u9a8c\u8bc1\u548c\u63d0\u4ea4\u9a8c\u8bc1</li>\n</ul>\n<h4>\u6570\u636e\u5904\u7406</h4>\n<ul>\n<li>\u652f\u6301\u8868\u5355\u6570\u636e\u7684\u83b7\u53d6\u3001\u8bbe\u7f6e\u548c\u91cd\u7f6e</li>\n<li>\u63d0\u4f9b\u6570\u636e\u8f6c\u6362\u548c\u683c\u5f0f\u5316\u529f\u80fd</li>\n<li>\u652f\u6301\u521d\u59cb\u6570\u636e\u8bbe\u7f6e</li>\n</ul>\n<h4>\u5206\u7ec4\u7ba1\u7406</h4>\n<ul>\n<li>\u652f\u6301\u8868\u5355\u5b57\u6bb5\u7684\u5206\u7ec4</li>\n<li>\u5141\u8bb8\u52a8\u6001\u6dfb\u52a0\u548c\u79fb\u9664\u5206\u7ec4</li>\n<li>\u652f\u6301\u5206\u7ec4\u7ea7\u522b\u7684\u64cd\u4f5c\u548c\u9a8c\u8bc1</li>\n</ul>\n<h3>\u67b6\u6784\u8bbe\u8ba1</h3>\n<h4>\u7ec4\u4ef6\u7ed3\u6784</h4>\n<ul>\n<li>Form\uff1a\u8868\u5355\u7684\u4e3b\u8981\u5bb9\u5668\uff0c\u8d1f\u8d23\u72b6\u6001\u7ba1\u7406\u548c\u4e0a\u4e0b\u6587\u63d0\u4f9b</li>\n<li>Field\uff1a\u8868\u5355\u5b57\u6bb5\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u5355\u4e2a\u5b57\u6bb5\u7684\u6e32\u67d3\u548c\u4ea4\u4e92</li>\n<li>Group\uff1a\u8868\u5355\u5206\u7ec4\u7ec4\u4ef6\uff0c\u7528\u4e8e\u7ba1\u7406\u76f8\u5173\u5b57\u6bb5\u7684\u96c6\u5408</li>\n<li>GroupList\uff1a\u52a8\u6001\u5206\u7ec4\u5217\u8868\uff0c\u652f\u6301\u6dfb\u52a0\u548c\u79fb\u9664\u5206\u7ec4</li>\n</ul>\n<h4>\u6838\u5fc3\u6a21\u5757</h4>\n<ul>\n<li>\u4e8b\u4ef6\u7cfb\u7edf\uff1a\u5904\u7406\u8868\u5355\u5185\u90e8\u7684\u4e8b\u4ef6\u901a\u4fe1</li>\n<li>\u9a8c\u8bc1\u7cfb\u7edf\uff1a\u5904\u7406\u8868\u5355\u548c\u5b57\u6bb5\u7684\u9a8c\u8bc1\u903b\u8f91</li>\n<li>\u62e6\u622a\u5668\uff1a\u63d0\u4f9b\u8868\u5355\u64cd\u4f5c\u7684\u62e6\u622a\u548c\u4fee\u6539\u80fd\u529b</li>\n<li>\u4efb\u52a1\u7cfb\u7edf\uff1a\u7ba1\u7406\u8868\u5355\u7684\u5f02\u6b65\u4efb\u52a1</li>\n</ul>\n<h3>\u4f7f\u7528\u573a\u666f</h3>\n<ul>\n<li>\u590d\u6742\u8868\u5355\u5f00\u53d1</li>\n<li>\u52a8\u6001\u8868\u5355\u751f\u6210</li>\n<li>\u8868\u5355\u9a8c\u8bc1\u548c\u63d0\u4ea4</li>\n<li>\u591a\u6b65\u9aa4\u8868\u5355\u6d41\u7a0b</li>\n<li>\u8868\u5355\u6570\u636e\u7ba1\u7406</li>\n</ul>",description:"\u7528\u4e8e\u8868\u5355\u7684\u6821\u9a8c",packageName:"@kne/react-form",api:'<h3>Form\u7ec4\u4ef6API</h3>\n<h4>\u5c5e\u6027</h4>\n<table>\n<thead>\n<tr>\n<th>\u5c5e\u6027\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u7c7b\u578b</th>\n<th>\u9ed8\u8ba4\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>initialValues</td>\n<td>\u8868\u5355\u521d\u59cb\u503c</td>\n<td>object</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>onSubmit</td>\n<td>\u8868\u5355\u63d0\u4ea4\u56de\u8c03\u51fd\u6570</td>\n<td>function(values, form)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onSubmitFail</td>\n<td>\u8868\u5355\u63d0\u4ea4\u5931\u8d25\u56de\u8c03\u51fd\u6570</td>\n<td>function(errors, form)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onReset</td>\n<td>\u8868\u5355\u91cd\u7f6e\u56de\u8c03\u51fd\u6570</td>\n<td>function(form)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onValidate</td>\n<td>\u8868\u5355\u9a8c\u8bc1\u56de\u8c03\u51fd\u6570</td>\n<td>function(values, form)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>interceptors</td>\n<td>\u8868\u5355\u62e6\u622a\u5668</td>\n<td>object</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>children</td>\n<td>\u8868\u5355\u5185\u5bb9</td>\n<td>React.ReactNode</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>\u793a\u4f8b</h4>\n<pre><code class="language-jsx">import { Form, Field } from \'react-form\';\n\nconst MyForm = () =&gt; {\n  const handleSubmit = (values) =&gt; {\n    console.log(\'Form values:\', values);\n  };\n\n  return (\n    &lt;Form\n      initialValues={{ name: \'John\', email: \'\' }}\n      onSubmit={handleSubmit}\n    &gt;\n      &lt;Field name="name" label="Name" /&gt;\n      &lt;Field name="email" label="Email" /&gt;\n      &lt;button type="submit"&gt;Submit&lt;/button&gt;\n    &lt;/Form&gt;\n  );\n};\n</code></pre>\n<h3>useOpenApi\u94a9\u5b50API</h3>\n<p>useOpenApi\u94a9\u5b50\u63d0\u4f9b\u4e86\u4e00\u7ec4\u7528\u4e8e\u64cd\u4f5c\u8868\u5355\u7684\u65b9\u6cd5\u3002</p>\n<h4>\u8fd4\u56de\u503c</h4>\n<table>\n<thead>\n<tr>\n<th>\u65b9\u6cd5\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u53c2\u6570</th>\n<th>\u8fd4\u56de\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getValues</td>\n<td>\u83b7\u53d6\u8868\u5355\u6240\u6709\u5b57\u6bb5\u7684\u503c</td>\n<td>-</td>\n<td>object</td>\n</tr>\n<tr>\n<td>getValue</td>\n<td>\u83b7\u53d6\u6307\u5b9a\u5b57\u6bb5\u7684\u503c</td>\n<td>(name: string)</td>\n<td>any</td>\n</tr>\n<tr>\n<td>setValues</td>\n<td>\u8bbe\u7f6e\u8868\u5355\u591a\u4e2a\u5b57\u6bb5\u7684\u503c</td>\n<td>(values: object, runValidate?: boolean)</td>\n<td>void</td>\n</tr>\n<tr>\n<td>setValue</td>\n<td>\u8bbe\u7f6e\u6307\u5b9a\u5b57\u6bb5\u7684\u503c</td>\n<td>(name: string, value: any, runValidate?: boolean)</td>\n<td>void</td>\n</tr>\n<tr>\n<td>setFields</td>\n<td>\u8bbe\u7f6e\u8868\u5355\u5b57\u6bb5\u7684\u5c5e\u6027</td>\n<td>(fields: array, runValidate?: boolean)</td>\n<td>void</td>\n</tr>\n<tr>\n<td>resetFields</td>\n<td>\u91cd\u7f6e\u8868\u5355\u5b57\u6bb5</td>\n<td>-</td>\n<td>void</td>\n</tr>\n<tr>\n<td>submit</td>\n<td>\u63d0\u4ea4\u8868\u5355</td>\n<td>-</td>\n<td>Promise</td>\n</tr>\n<tr>\n<td>validate</td>\n<td>\u9a8c\u8bc1\u8868\u5355</td>\n<td>(names?: string[])</td>\n<td>Promise&lt;boolean&gt;</td>\n</tr>\n<tr>\n<td>getFieldError</td>\n<td>\u83b7\u53d6\u6307\u5b9a\u5b57\u6bb5\u7684\u9519\u8bef\u4fe1\u606f</td>\n<td>(name: string)</td>\n<td>string</td>\n</tr>\n<tr>\n<td>getErrors</td>\n<td>\u83b7\u53d6\u8868\u5355\u6240\u6709\u5b57\u6bb5\u7684\u9519\u8bef\u4fe1\u606f</td>\n<td>-</td>\n<td>object</td>\n</tr>\n<tr>\n<td>isFieldTouched</td>\n<td>\u5224\u65ad\u5b57\u6bb5\u662f\u5426\u88ab\u7528\u6237\u64cd\u4f5c\u8fc7</td>\n<td>(name: string)</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>isFieldValidating</td>\n<td>\u5224\u65ad\u5b57\u6bb5\u662f\u5426\u6b63\u5728\u9a8c\u8bc1</td>\n<td>(name: string)</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>getFieldsValue</td>\n<td>\u83b7\u53d6\u591a\u4e2a\u5b57\u6bb5\u7684\u503c</td>\n<td>(nameList: string[])</td>\n<td>object</td>\n</tr>\n</tbody>\n</table>\n<h4>\u793a\u4f8b</h4>\n<pre><code class="language-jsx">import { Form, useOpenApi } from \'react-form\';\n\nconst FormWithApi = () =&gt; {\n  const formApi = useOpenApi();\n  \n  const handleClick = () =&gt; {\n    formApi.setValue(\'name\', \'New Name\');\n    console.log(formApi.getValues());\n  };\n\n  return (\n    &lt;Form&gt;\n      &lt;Field name="name" label="Name" /&gt;\n      &lt;Field name="email" label="Email" /&gt;\n      &lt;button type="button" onClick={handleClick}&gt;\n        Update Name\n      &lt;/button&gt;\n      &lt;button type="submit"&gt;Submit&lt;/button&gt;\n    &lt;/Form&gt;\n  );\n};\n</code></pre>\n<h3>Field\u7ec4\u4ef6API</h3>\n<h4>\u5c5e\u6027</h4>\n<table>\n<thead>\n<tr>\n<th>\u5c5e\u6027\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u7c7b\u578b</th>\n<th>\u9ed8\u8ba4\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>\u5b57\u6bb5\u540d\u79f0</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>label</td>\n<td>\u5b57\u6bb5\u6807\u7b7e</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>\u9ed8\u8ba4\u503c</td>\n<td>any</td>\n<td>-</td>\n</tr>\n<tr>\n<td>rules</td>\n<td>\u9a8c\u8bc1\u89c4\u5219</td>\n<td>array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>children</td>\n<td>\u81ea\u5b9a\u4e49\u6e32\u67d3\u51fd\u6570</td>\n<td>function(field)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>\u503c\u53d8\u5316\u56de\u8c03</td>\n<td>function(value, field)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onBlur</td>\n<td>\u5931\u7126\u56de\u8c03</td>\n<td>function(e, field)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onFocus</td>\n<td>\u805a\u7126\u56de\u8c03</td>\n<td>function(e, field)</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>\u793a\u4f8b</h4>\n<pre><code class="language-jsx">import { Form, Field } from \'react-form\';\n\nconst MyForm = () =&gt; {\n  return (\n    &lt;Form&gt;\n      &lt;Field\n        name="username"\n        label="Username"\n        defaultValue=""\n        rules={[\n          { required: true, message: \'Please input your username!\' },\n          { min: 3, message: \'Username must be at least 3 characters\' }\n        ]}\n      &gt;\n        {({ value, onChange, error }) =&gt; (\n          &lt;div&gt;\n            &lt;input value={value} onChange={e =&gt; onChange(e.target.value)} /&gt;\n            {error &amp;&amp; &lt;div className="error"&gt;{error}&lt;/div&gt;}\n          &lt;/div&gt;\n        )}\n      &lt;/Field&gt;\n      &lt;button type="submit"&gt;Submit&lt;/button&gt;\n    &lt;/Form&gt;\n  );\n};\n</code></pre>\n<h3>Group\u7ec4\u4ef6API</h3>\n<h4>\u5c5e\u6027</h4>\n<table>\n<thead>\n<tr>\n<th>\u5c5e\u6027\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u7c7b\u578b</th>\n<th>\u9ed8\u8ba4\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>\u5206\u7ec4\u540d\u79f0</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>\u5206\u7ec4\u5185\u5bb9</td>\n<td>React.ReactNode</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>GroupList\u7ec4\u4ef6\u5c5e\u6027</h4>\n<table>\n<thead>\n<tr>\n<th>\u5c5e\u6027\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u7c7b\u578b</th>\n<th>\u9ed8\u8ba4\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>\u5206\u7ec4\u5217\u8868\u540d\u79f0</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>\u5206\u7ec4\u6a21\u677f</td>\n<td>function(index)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultLength</td>\n<td>\u521d\u59cb\u5206\u7ec4\u6570\u91cf</td>\n<td>number</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<h4>\u793a\u4f8b</h4>\n<pre><code class="language-jsx">import { Form, Field, Group, GroupList } from \'react-form\';\n\nconst MyForm = () =&gt; {\n  return (\n    &lt;Form&gt;\n      &lt;GroupList name="contacts" defaultLength={1}&gt;\n        {(index) =&gt; (\n          &lt;Group name={index}&gt;\n            &lt;Field name="name" label="Name" /&gt;\n            &lt;Field name="phone" label="Phone" /&gt;\n          &lt;/Group&gt;\n        )}\n      &lt;/GroupList&gt;\n      &lt;button type="button" onClick={() =&gt; formApi.addGroup(\'contacts\')}&gt;\n        Add Contact\n      &lt;/button&gt;\n      &lt;button type="submit"&gt;Submit&lt;/button&gt;\n    &lt;/Form&gt;\n  );\n};\n</code></pre>\n<h3>\u8868\u5355\u9a8c\u8bc1\u89c4\u5219API</h3>\n<h4>\u5185\u7f6e\u89c4\u5219</h4>\n<table>\n<thead>\n<tr>\n<th>\u89c4\u5219\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u53c2\u6570\u7c7b\u578b</th>\n<th>\u793a\u4f8b</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>required</td>\n<td>\u5fc5\u586b\u5b57\u6bb5</td>\n<td>boolean</td>\n<td>{ required: true, message: \'\u5fc5\u586b\u5b57\u6bb5\' }</td>\n</tr>\n<tr>\n<td>min</td>\n<td>\u6700\u5c0f\u957f\u5ea6/\u503c</td>\n<td>number</td>\n<td>{ min: 3, message: \'\u6700\u5c0f\u957f\u5ea6\u4e3a3\' }</td>\n</tr>\n<tr>\n<td>max</td>\n<td>\u6700\u5927\u957f\u5ea6/\u503c</td>\n<td>number</td>\n<td>{ max: 10, message: \'\u6700\u5927\u957f\u5ea6\u4e3a10\' }</td>\n</tr>\n<tr>\n<td>pattern</td>\n<td>\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d</td>\n<td>RegExp</td>\n<td>{ pattern: /^d+$/, message: \'\u5fc5\u987b\u4e3a\u6570\u5b57\' }</td>\n</tr>\n<tr>\n<td>validator</td>\n<td>\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u51fd\u6570</td>\n<td>function</td>\n<td>{ validator: (value) =&gt; value === \'test\' ? \'\' : \'\u9a8c\u8bc1\u5931\u8d25\' }</td>\n</tr>\n</tbody>\n</table>\n<h4>\u793a\u4f8b</h4>\n<pre><code class="language-jsx">import { Form, Field } from \'react-form\';\n\nconst MyForm = () =&gt; {\n  return (\n    &lt;Form&gt;\n      &lt;Field\n        name="email"\n        label="Email"\n        rules={[\n          { required: true, message: \'\u8bf7\u8f93\u5165\u90ae\u7bb1\' },\n          { pattern: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$/, message: \'\u90ae\u7bb1\u683c\u5f0f\u4e0d\u6b63\u786e\' }\n        ]}\n      /&gt;\n      &lt;Field\n        name="password"\n        label="Password"\n        rules={[\n          { required: true, message: \'\u8bf7\u8f93\u5165\u5bc6\u7801\' },\n          { min: 6, message: \'\u5bc6\u7801\u957f\u5ea6\u4e0d\u80fd\u5c0f\u4e8e6\u4f4d\' },\n          { \n            validator: (value) =&gt; {\n              if (!/[A-Z]/.test(value)) {\n                return \'\u5bc6\u7801\u5fc5\u987b\u5305\u542b\u5927\u5199\u5b57\u6bcd\';\n              }\n              return \'\';\n            }\n          }\n        ]}\n      /&gt;\n      &lt;button type="submit"&gt;Submit&lt;/button&gt;\n    &lt;/Form&gt;\n  );\n};\n</code></pre>\n<h3>\u8868\u5355\u62e6\u622a\u5668API</h3>\n<p>\u62e6\u622a\u5668\u53ef\u4ee5\u5728\u8868\u5355\u64cd\u4f5c\u7684\u4e0d\u540c\u9636\u6bb5\u8fdb\u884c\u62e6\u622a\u548c\u4fee\u6539\u3002</p>\n<h4>\u53ef\u7528\u62e6\u622a\u5668</h4>\n<table>\n<thead>\n<tr>\n<th>\u62e6\u622a\u5668\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u53c2\u6570</th>\n<th>\u8fd4\u56de\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>beforeSubmit</td>\n<td>\u8868\u5355\u63d0\u4ea4\u524d\u62e6\u622a</td>\n<td>(values, form)</td>\n<td>values\u6216Promise</td>\n</tr>\n<tr>\n<td>afterSubmit</td>\n<td>\u8868\u5355\u63d0\u4ea4\u540e\u62e6\u622a</td>\n<td>(result, form)</td>\n<td>result\u6216Promise</td>\n</tr>\n<tr>\n<td>beforeValidate</td>\n<td>\u8868\u5355\u9a8c\u8bc1\u524d\u62e6\u622a</td>\n<td>(values, form)</td>\n<td>values\u6216Promise</td>\n</tr>\n<tr>\n<td>afterValidate</td>\n<td>\u8868\u5355\u9a8c\u8bc1\u540e\u62e6\u622a</td>\n<td>(errors, form)</td>\n<td>errors\u6216Promise</td>\n</tr>\n<tr>\n<td>beforeReset</td>\n<td>\u8868\u5355\u91cd\u7f6e\u524d\u62e6\u622a</td>\n<td>(form)</td>\n<td>void\u6216Promise</td>\n</tr>\n<tr>\n<td>afterReset</td>\n<td>\u8868\u5355\u91cd\u7f6e\u540e\u62e6\u622a</td>\n<td>(form)</td>\n<td>void\u6216Promise</td>\n</tr>\n</tbody>\n</table>\n<h4>\u793a\u4f8b</h4>\n<pre><code class="language-jsx">import { Form, Field } from \'react-form\';\n\nconst MyForm = () =&gt; {\n  const interceptors = {\n    beforeSubmit: (values) =&gt; {\n      console.log(\'Before submit:\', values);\n      // \u53ef\u4ee5\u4fee\u6539values\n      return {\n        ...values,\n        timestamp: Date.now()\n      };\n    },\n    afterSubmit: (result) =&gt; {\n      console.log(\'After submit:\', result);\n      return result;\n    }\n  };\n\n  return (\n    &lt;Form\n      interceptors={interceptors}\n      onSubmit={(values) =&gt; console.log(\'Submit:\', values)}\n    &gt;\n      &lt;Field name="name" label="Name" /&gt;\n      &lt;Field name="email" label="Email" /&gt;\n      &lt;button type="submit"&gt;Submit&lt;/button&gt;\n    &lt;/Form&gt;\n  );\n};\n</code></pre>',example:{isFull:!1,className:"react_form_5f21f",style:".react_form_5f21f .ant-card {\n  border-color: black;\n  text-align: center;\n  width: 200px;\n}",list:[{title:"\u57fa\u672c\u793a\u4f8b",description:"\u7b80\u5355\u7684form\u5230input\u7ec4\u4ef6\u7684\u7ed1\u5b9a",code:"const { default: ReactForm, useField, useSubmit, useReset } = _ReactForm;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n\n  return (<div>\n    {fieldProps.label}\n    <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? '\u6b63\u5728\u63d0\u4ea4\u4e2d...' : ''}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst BaseExample = () => {\n  return <div>\n    <ReactForm debug data={{\n      name: '\u54c8\u54c8\u54c8'\n    }} onSubmit={async (data) => {\n      await new Promise((resolve)=>{\n        setTimeout(() => {\n          resolve();\n        },3000);\n      });\n      console.log('submit:', data);\n    }}>\n      <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"REQ LEN-0-10\" />\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n",scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o}]},{title:"openApi",description:"\u5c55\u793aopenApi\u7684\u4f7f\u7528",code:"const { default: ReactForm, useField, useSubmit, useReset } = _ReactForm;\nconst { useRef } = React;\nconst { Button, Space } = antd;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n\n  return (<div>\n    {fieldProps.label}\n    <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? '\u6b63\u5728\u63d0\u4ea4\u4e2d...' : ''}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst BaseExample = () => {\n  const formApiRef = useRef();\n  return <div>\n    <Space>\n      <Button onClick={() => {\n        console.log(formApiRef.current.data);\n      }}>\u83b7\u53d6\u8868\u5355\u503c</Button>\n      <Button onClick={() => {\n        formApiRef.current.setField({ name: 'name', value: '\u54c8\u54c8\u54c8' });\n      }}>\u8bbe\u7f6e\u5b57\u6bb5\u503c</Button>\n      <Button onClick={() => {\n        formApiRef.current.setFields([{ name: 'name', value: '\u54c8\u54c8\u54c8' }, {\n          name: 'name2', value: '\u54c8\u54c8\u54c82'\n        }, { name: 'name3', value: '\u54c8\u54c8\u54c83' }]);\n      }}>\u8bbe\u7f6e\u591a\u4e2a\u5b57\u6bb5\u503c</Button>\n      <Button onClick={() => {\n        formApiRef.current.setFieldValidate({\n          name: 'name2', validate: { status: 2, msg: '\u6211\u662f\u4e00\u4e2a\u901a\u8fc7api\u8bbe\u7f6e\u7684\u9519\u8bef' }\n        });\n      }}>\u8bbe\u7f6e\u6821\u9a8c\u4fe1\u606f</Button>\n    </Space>\n    <ReactForm ref={formApiRef}>\n      <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"REQ LEN-0-10\" />\n      <Input name=\"name2\" label=\"\u540d\u79f02\" rule=\"REQ LEN-0-10\" />\n      <Input name=\"name3\" label=\"\u540d\u79f03\" rule=\"REQ LEN-0-10\" />\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n",scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o},{name:"antd",packageName:"antd",component:r}]},{title:"use-form-api",description:"\u5c55\u793auseFormApi\u7684\u4f7f\u7528",code:"const { default: ReactForm, useField, useSubmit, useReset, useFormApi } = _ReactForm;\nconst { useRef } = React;\nconst { Button, Space } = antd;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n  return (<div>\n    {fieldProps.label}\n    <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? '\u6b63\u5728\u63d0\u4ea4\u4e2d...' : ''}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst Options = () => {\n  const { openApi: formApi } = useFormApi();\n\n  console.log(formApi);\n\n  return <Space>\n    <Button onClick={() => {\n      console.log(formApi.getFormData());\n    }}>\u83b7\u53d6\u8868\u5355\u503c</Button>\n    <Button onClick={() => {\n      formApi.setField({ name: 'name', value: '\u54c8\u54c8\u54c8' });\n    }}>\u8bbe\u7f6e\u5b57\u6bb5\u503c</Button>\n    <Button onClick={() => {\n      formApi.setFields([{ name: 'name', value: '\u54c8\u54c8\u54c8' }, {\n        name: 'name2', value: '\u54c8\u54c8\u54c82'\n      }, { name: 'name3', value: '\u54c8\u54c8\u54c83' }]);\n    }}>\u8bbe\u7f6e\u591a\u4e2a\u5b57\u6bb5\u503c</Button>\n    <Button onClick={() => {\n      formApi.setFieldValidate({\n        name: 'name2', validate: { status: 2, msg: '\u6211\u662f\u4e00\u4e2a\u901a\u8fc7api\u8bbe\u7f6e\u7684\u9519\u8bef' }\n      });\n    }}>\u8bbe\u7f6e\u6821\u9a8c\u4fe1\u606f</Button>\n  </Space>;\n};\n\nconst BaseExample = () => {\n  const formApiRef = useRef();\n  return <div>\n    <ReactForm ref={formApiRef}>\n      <div><Options /></div>\n      <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"REQ LEN-0-10\" />\n      <Input name=\"name2\" label=\"\u540d\u79f02\" rule=\"REQ LEN-0-10\" />\n      <Input name=\"name3\" label=\"\u540d\u79f03\" rule=\"REQ LEN-0-10\" />\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n",scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o},{name:"antd",packageName:"antd",component:r}]},{title:"group",description:"\u5c55\u793agroup\u7684\u4f7f\u7528",code:"const { default: ReactForm, useField, useSubmit, useReset, GroupList } = _ReactForm;\nconst { useRef } = React;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n\n  return (<div>\n    {fieldProps.label}\n    <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? '\u6b63\u5728\u63d0\u4ea4\u4e2d...' : ''}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst BaseExample = () => {\n  const ref = useRef();\n  const formApiRef = useRef();\n  return <div>\n    <div>\n      <button onClick={() => {\n        formApiRef.current.setField({\n          name: 'name', groupName: 'group', groupIndex: 0, value: '\u8bbe\u7f6egroup\u5b57\u6bb5\u503c'\n        });\n      }}>\n        \u8bbe\u7f6egroup\u7b2c\u4e00\u9879name\u5b57\u6bb5\u503c\n      </button>\n      <button onClick={() => {\n        formApiRef.current.setField({\n          name: 'name', groupName: 'group', value: '\u8bbe\u7f6egroup\u5b57\u6bb5\u503c'\n        });\n      }}>\n        \u8bbe\u7f6egroup\u6240\u6709\u9879name\u5b57\u6bb5\u503c\n      </button>\n      <button onClick={() => {\n        formApiRef.current.setField({\n          groupName: 'group', groupIndex: 0, value: {\n            name: '\u540d\u79f0', des: '\u8bf4\u660e'\n          }\n        });\n      }}>\n        \u8bbe\u7f6egroup\u7b2c\u4e00\u9879\u6240\u6709\u5b57\u6bb5\u503c\n      </button>\n      <button onClick={() => {\n        formApiRef.current.setFormData({\n          group: [{ name: '\u7b2c\u4e00\u9879' }, { name: '\u7b2c\u4e8c\u9879' }, { name: '\u7b2c\u4e09\u9879' }, { name: '\u7b2c\u56db\u9879' }, { name: '\u7b2c\u4e94\u9879' }]\n        });\n      }}>\u8bbe\u7f6e\u6574\u4e2a\u8868\u5355\u7684\u503c\n      </button>\n    </div>\n    <ReactForm ref={formApiRef} onSubmit={(data) => {\n      console.log('submit:', data);\n    }}>\n      <div>\n        <button onClick={() => {\n          ref.current.onAdd();\n        }}>\u5012\u5e8f\u6dfb\u52a0\n        </button>\n      </div>\n      <GroupList ref={ref} name=\"group\">{({ index, onRemove }) => {\n        return <div>\n          <div>\u7b2c{index + 1}\u9879</div>\n          <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"REQ LEN-0-10\" onChange={() => {\n            console.log(index);\n          }} />\n          <Input name=\"des\" label=\"\u63cf\u8ff0\" rule=\"LEN-0-10\" />\n          <GroupList name=\"inner\">{({ index, onRemove }) => {\n            return <div style={{\n              padding: '10px', background: '#eee'\n            }}>\n              <div>\u7b2c{index + 1}\u9879</div>\n              <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"LEN-0-10\" />\n              <Input name=\"des\" label=\"\u63cf\u8ff0\" rule=\"LEN-0-10\" />\n              <button onClick={() => {\n                onRemove();\n              }}>\u5220\u9664\u5b50GroupItem\n              </button>\n            </div>;\n          }}</GroupList>\n          <button onClick={() => {\n            onRemove();\n          }}>\u5220\u9664\n          </button>\n        </div>;\n      }}</GroupList>\n      <button onClick={() => {\n        ref.current.onAdd({ isUnshift: false });\n      }}>\u987a\u5e8f\u6dfb\u52a0\n      </button>\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n",scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o},{name:"antd",packageName:"antd",component:r}]},{title:"associations",description:"\u5b57\u6bb5\u5173\u8054\u5173\u7cfb",code:'const { default: ReactForm, useField, useSubmit, useReset, GroupList } = _ReactForm;\n\nconst { useRef } = React;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n\n  return (<div>\n    {fieldProps.label}\n    <input {...fieldProps.associationOptions} ref={fieldProps.fieldRef} type="text" value={fieldProps.value || \'\'}\n           onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? \'\u6b63\u5728\u63d0\u4ea4\u4e2d...\' : \'\'}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst BaseExample = () => {\n  const ref = useRef(null);\n  return <div>\n    <ReactForm debug onSubmit={(data) => {\n      console.log(\'submit:\', data);\n    }}>\n      <Input name="name" label="\u540d\u79f0" rule="REQ LEN-0-10" />\n      <Input name="des" label="\u63cf\u8ff0" rule="LEN-0-10" associations={{\n        fields: [{\n          name: \'name\'\n        }], callback: ({ target, origin, openApi }) => {\n          openApi.setFieldValue(target, origin.value);\n        }\n      }} />\n      <hr />\n      <Input name="familyName" label="\u59d3" rule="REQ LEN-0-10" />\n      <Input name="firstName" label="\u540d" rule="REQ LEN-0-10" />\n      <Input name="fullName" label="\u5168\u540d" rule="REQ LEN-0-20" associations={{\n        fields: [{\n          name: \'familyName\'\n        }, {\n          name: \'firstName\'\n        }], callback: ({ target, openApi }) => {\n          const { firstName, familyName } = openApi.getFormData();\n          openApi.setFieldValue(target, firstName && firstName ? `${firstName} ${familyName}` : \'\');\n        }\n      }} />\n      <hr />\n      <Input name="money" label="\u91d1\u989d" />\n      <Input name="ratio" label="\u6bd4\u4f8b" />\n      <Input name="all" label="\u603b\u91d1\u989d" associations={{\n        fields: [{\n          name: \'money\'\n        }, {\n          name: \'ratio\'\n        }], callback: ({ target, openApi }) => {\n          const { money, ratio } = openApi.getFormData();\n          openApi.setFieldValue(target, money && ratio && ratio > 0 ? money / ratio : \'\');\n        }\n      }} />\n      <hr />\n      <div>\n        <button onClick={() => {\n          ref.current.onAdd();\n        }}>\u6dfb\u52a0\n        </button>\n      </div>\n      <GroupList ref={ref} name="group" defaultLength={1}>{({ index, onRemove }) => {\n        return <div>\n          <div>\u7b2c{index + 1}\u9879</div>\n          <Input name="sum" label="\u6570\u91cf" />\n          <button onClick={() => {\n            onRemove();\n          }}>\u5220\u9664\n          </button>\n        </div>;\n      }}</GroupList>\n      <Input name="amount" label="\u603b\u6570" associations={{\n        fields: [{\n          name: \'sum\', groupName: \'group\'\n        }], callback: ({ target, openApi }) => {\n          const { group } = openApi.getFormData();\n          openApi.setFieldValue(target, (group || []).filter((item) => item.sum > 0).reduce((a, b) => a + parseInt(b.sum), 0));\n        }\n      }} />\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n',scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o},{name:"antd",packageName:"antd",component:r}]},{title:"\u57fa\u672c\u793a\u4f8b",description:"\u7b80\u5355\u7684form\u5230input\u7ec4\u4ef6\u7684\u7ed1\u5b9a",code:"const { default: ReactForm, useField, useSubmit, useReset } = _ReactForm;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n\n  return (\n    <div>\n      {fieldProps.label}\n      <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange} onBlur={fieldProps.triggerValidate} />\n      {fieldProps.errState}\n      {fieldProps.errMsg}\n    </div>\n  );\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (\n    <button onClick={onClick}>\n      {children}\n      {isLoading ? '\u6b63\u5728\u63d0\u4ea4\u4e2d...' : ''}\n    </button>\n  );\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <ReactForm\n        debug\n        rules={{\n          REMOTE_RULE: async value => {\n            console.log('>>>>>start');\n            await new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            console.log('>>>>>>>>end');\n            return { result: true };\n          }\n        }}\n        data={{\n          name: '\u54c8\u54c8\u54c8'\n        }}\n        onSubmit={async data => {\n          console.log('>>>>>>>>>>>>>>>');\n          await new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n            }, 3000);\n          });\n          console.log('submit:', data);\n        }}>\n        <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"REQ REMOTE_RULE\" />\n        <div>\n          <SubmitButton>\u63d0\u4ea4</SubmitButton>\n          <ResetButton>\u91cd\u7f6e</ResetButton>\n        </div>\n      </ReactForm>\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n",scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o}]}]}}}}]);
//# sourceMappingURL=666.f16d6c7c.chunk.js.map