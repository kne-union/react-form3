{"version":3,"file":"static/js/830.e2d2a650.chunk.js","mappings":"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","sources":["../../src/core/empty.js","../../src/core/compileErrMsg.js","../../src/core/Field.js","../../src/core/ruleValidate.js","../../src/Form/FormApiProvider.js","../../src/formContext.js","../../src/core/getFieldUtils.js","../../src/core/getIdlePromise.js","../../src/core/groupKey.js","../../src/Form/FormEvent.js","../../src/Form/event/createFieldAddEvent.js","../../src/Form/event/createFieldChangeEvent.js","../../src/Form/event/createFieldRemoveEvent.js","../../src/Form/event/createValidateEvent.js","../../src/Form/event/createResetEvent.js","../../src/Form/event/createSetDataEvent.js","../../src/Form/event/createSetFieldsEvent.js","../../src/Form/event/createSubmitEvent.js","../../src/Form/event/createGroupChangeEvent.js","../../src/Form/event/createGroupRemoveEvent.js","../../src/core/interceptors.js","../../src/Form/useFormTask.js","../../src/core/RULES.js","../../src/Form/index.js","../../src/Form/useFormGroup.js","../../src/Form/useOpenApi.js","../../src/Form/useInterceptors.js","../../src/Group/context.js","../../src/Group/Group.js","../../src/Group/GroupList.js","../../src/core/getFieldValue.js","../../src/Field/useField.js","../../src/Field/useFieldInit.js","../../src/Field/useFieldEvent.js","../../src/useReset.js","../../src/useSubmit.js","../../src/index.js"],"sourcesContent":["import isPlainObject from 'lodash/isPlainObject';\nimport getValues from 'lodash/values';\nimport isArray from 'lodash/isArray';\n\nexport const isNotEmpty = value => {\n  if (isPlainObject(value)) {\n    const values = getValues(value);\n    return values.length > 0 && values.some(item => !!item);\n  } else if (isArray(value)) {\n    return value.length > 0;\n  } else if (typeof value === 'number') {\n    return !isNaN(value);\n  } else {\n    return !(value === undefined || value === null || value === '' || value.length === 0);\n  }\n};\n\nexport const isEmpty = value => !isNotEmpty(value);\n\nexport const filterEmpty = (value = {}) => {\n  if (isArray(value)) {\n    return value.map(item => filterEmpty(item)).filter(isNotEmpty);\n  }\n  if (isPlainObject(value)) {\n    const output = {};\n    Object.keys(value).forEach(key => {\n      const current = filterEmpty(value[key]);\n      if (isNotEmpty(current)) {\n        output[key] = current;\n      }\n    });\n    return output;\n  }\n  return value;\n};\n","const compileErrMsg = (errMsg, label) => {\n  return typeof errMsg === 'string' ? errMsg.replace('%s', label) : errMsg(label);\n};\n\nexport default compileErrMsg;\n","import last from 'lodash/last';\nimport get from 'lodash/get';\nimport isNil from 'lodash/isNil';\nimport clone from 'lodash/clone';\nimport transform from 'lodash/transform';\nimport memoize from 'lodash/memoize';\nimport set from 'lodash/set';\nimport ruleValidate from './ruleValidate';\nimport compileErrMsg from './compileErrMsg';\n\nexport const FORM_FIELD_STATE_ENUM = {\n  PRE_INIT: 'PRE_INIT',\n  INIT: 'INIT'\n};\n\nexport const FORM_FIELD_VALIDATE_STATE_ENUM = {\n  INIT: 'INIT',\n  PENDING: 'PENDING',\n  PASS: 'PASS',\n  ERROR: 'ERROR'\n};\n\nclass Field {\n  static stateToError = memoize(formState => {\n    return Array.from(formState.values())\n      .filter(field => {\n        return get(field, 'validate.status') === FORM_FIELD_VALIDATE_STATE_ENUM.ERROR;\n      })\n      .map(field => {\n        return Object.assign({}, field.validate, {\n          name: field.name,\n          label: field.label,\n          groupName: field.groupName,\n          fieldRef: field.fieldRef,\n          groupIndex: field.groupIndex,\n          errMsg: field.getErrMsg()\n        });\n      });\n  });\n\n  constructor({ id, name, associations, formInterceptor, options }) {\n    this.id = id;\n    this.name = name;\n    this.formInterceptor = formInterceptor;\n    this.groupName = null;\n    this.groupIndex = null;\n    this.state = FORM_FIELD_STATE_ENUM.PRE_INIT;\n    this.fieldRef = null;\n    this.associations = {\n      fields: get(associations, 'fields', []).filter(item => !!item.name),\n      callback: get(associations, 'callback', () => {})\n    };\n    this.validate = { status: FORM_FIELD_VALIDATE_STATE_ENUM.INIT };\n    this.value = void 0;\n    this.options = Object.assign({}, options);\n  }\n\n  get isReady() {\n    return this.state === FORM_FIELD_STATE_ENUM.INIT;\n  }\n\n  get isPass() {\n    return this.validate.status === FORM_FIELD_VALIDATE_STATE_ENUM.PASS;\n  }\n\n  static findField = (formState, token) => {\n    if (token.id) {\n      return formState.get(token.id);\n    }\n    if (!token.groupName) {\n      return Array.from(formState.values()).find(field => field.name === token.name);\n    }\n    return Array.from(formState.values()).find(field => field.name === token.name && field.groupName === token.groupName && field.groupIndex === token.groupIndex);\n  };\n\n  static matchField = (field, token) => {\n    return Object.keys(token)\n      .filter(key => !isNil(token[key]))\n      .every(key => field[key] === token[key]);\n  };\n\n  static matchFields = (formState, token) => {\n    if (!token.groupName) {\n      const target = Field.findField(formState, token);\n      return target ? [target] : [];\n    }\n    return Array.from(formState.values()).filter(field => Field.matchField(field, token));\n  };\n\n  static matchAssociationFields = (formState, target) => {\n    return Array.from(formState.values()).filter(field => {\n      if (field.id === target.id) {\n        // 排除自己\n        return false;\n      }\n\n      if (!field.associations.fields && field.associations.fields.length > 0) {\n        return false;\n      }\n\n      return field.associations.fields.some(token => Field.matchField(target, token));\n    });\n  };\n\n  static getFieldValuePath = options => {\n    if (options.groupName && !isNil(options.groupIndex) && last(options.groupName.split('.')) === options.name) {\n      return `${options.groupName}[\"${options.groupIndex}\"]`;\n    }\n    if (options.groupName && !isNil(options.groupIndex)) {\n      return `${options.groupName}[\"${options.groupIndex}\"].${options.name}`;\n    }\n\n    return options.name;\n  };\n\n  static computedFormDataFormState = memoize(state => {\n    return transform(\n      Array.from(state.values()),\n      (result, field) => {\n        if (!field.name) {\n          return;\n        }\n        const fieldValue = field.getFieldValue();\n        set(result, Field.getFieldValuePath(field), fieldValue);\n      },\n      {}\n    );\n  });\n  static computedFieldValueFromFormData = memoize((field, formData) => {\n    return get(formData, Field.getFieldValuePath(field));\n  });\n\n  static stateToIsPass = formState => {\n    return Array.from(formState.values()).every(field => {\n      return field.isPass;\n    });\n  };\n\n  setInfo({ groupName, groupIndex, label, rule, interceptor, noTrim, fieldRef, errMsg }) {\n    this.groupName = groupName;\n    this.groupIndex = groupIndex;\n    this.label = label;\n    this.rule = rule;\n    this.interceptor = interceptor;\n    this.noTrim = noTrim;\n    this.fieldRef = fieldRef;\n    this.errMsg = errMsg;\n    this.state = FORM_FIELD_STATE_ENUM.INIT;\n    this.path = Field.getFieldValuePath(this);\n    return this;\n  }\n\n  getValueFromFormData(formData) {\n    return Field.computedFieldValueFromFormData(this, formData);\n  }\n\n  setFieldValue(value) {\n    this.setValue(this.formInterceptor.input({ value, interceptor: this.interceptor }));\n    return this;\n  }\n\n  getFieldValue() {\n    return this.formInterceptor.output({ value: this.value, interceptor: this.interceptor });\n  }\n\n  getErrState() {\n    if (this.validate.status === FORM_FIELD_VALIDATE_STATE_ENUM.PASS) {\n      return 1;\n    }\n    if (this.validate.status === FORM_FIELD_VALIDATE_STATE_ENUM.ERROR) {\n      return 2;\n    }\n    if (this.validate.status === FORM_FIELD_VALIDATE_STATE_ENUM.PENDING) {\n      return 3;\n    }\n\n    return 0;\n  }\n\n  getErrMsg() {\n    return compileErrMsg(this.errMsg || this.validate.msg || '', this.label);\n  }\n\n  setValidateStatus({ status, msg = '', validateData }) {\n    this.validate = {\n      status: (status => {\n        if (status === 1) {\n          return FORM_FIELD_VALIDATE_STATE_ENUM.PASS;\n        }\n        if (status === 2) {\n          return FORM_FIELD_VALIDATE_STATE_ENUM.ERROR;\n        }\n        return FORM_FIELD_VALIDATE_STATE_ENUM.INIT;\n      })(status),\n      msg,\n      validateData: Object.assign({}, this.validate.validateData, validateData)\n    };\n    return this;\n  }\n\n  async runValidate(rules, getFormData) {\n    const validate = await ruleValidate({\n      field: this.clone(),\n      value: this.value,\n      formRules: rules,\n      getFormData\n    });\n\n    this.validate = {\n      status: validate.result === true ? FORM_FIELD_VALIDATE_STATE_ENUM.PASS : FORM_FIELD_VALIDATE_STATE_ENUM.ERROR,\n      msg: validate.errMsg,\n      validateData: Object.assign({}, validate.data)\n    };\n    return this;\n  }\n\n  setValue(value) {\n    if (this.value === value) {\n      return this;\n    }\n    this.value = value;\n    this.validate = { status: FORM_FIELD_VALIDATE_STATE_ENUM.INIT };\n    return this;\n  }\n\n  deleteValue() {\n    this.setValue(void 0);\n    return this;\n  }\n\n  clone() {\n    return clone(this);\n  }\n}\n\nexport default Field;\n","const ruleValidate = async ({ field, value, formRules, getFormData }) => {\n  if (typeof field.rule === 'function') {\n    return await field.rule(value, Object.assign({}, { data: getFormData() }, { field }));\n  }\n  if (typeof field.rule === 'object' && field.rule instanceof RegExp) {\n    return {\n      result: field.rule.test(value),\n      errMsg: ''\n    };\n  }\n\n  const data = {};\n\n  if (typeof field.rule === 'string') {\n    const rules = field.rule.split(' ').filter(str => str.length > 0);\n    for (let currentRule of rules) {\n      let [key, ...args] = currentRule.split('-');\n      const exec = formRules[key.toUpperCase()];\n      if (typeof exec === 'function') {\n        //空值处理 如果不为REQ规则的规则REQ判断不通过返回正确\n        if (currentRule !== 'REQ') {\n          const emptyRes = formRules['REQ'](value, ...args, Object.assign({}, { data: getFormData() }, { field }));\n          if (emptyRes.result !== true) {\n            return {\n              result: true,\n              errMsg: '',\n              data\n            };\n          }\n        }\n\n        const res = await exec(value, ...args, Object.assign({}, { data: getFormData() }, { field }));\n\n        Object.assign(data, { [key.toUpperCase()]: res.data });\n\n        if (res.result !== true) {\n          return {\n            result: false,\n            errMsg: res.errMsg,\n            data\n          };\n        }\n      } else {\n        console.error(`校验规则${currentRule}不在当前form的rules里面，请确认${field.name}的校验规则${field.rule}是否正确`);\n      }\n    }\n  }\n  return {\n    result: true,\n    errMsg: '',\n    data\n  };\n};\n\nexport default ruleValidate;\n","import React, { createContext, useContext, useMemo, useRef } from 'react';\n\nconst context = createContext({});\n\nconst { Provider, Consumer } = context;\nexport const useFormApi = () => {\n  const { openApiRef } = useContext(context);\n\n  return useMemo(() => {\n    return {\n      get formData() {\n        return openApiRef.current.data;\n      },\n      get formState() {\n        return openApiRef.current.formState;\n      },\n      get openApi() {\n        return openApiRef.current;\n      },\n      get isPass() {\n        return openApiRef.current.isPass;\n      },\n      get errors() {\n        return openApiRef.current.errors;\n      },\n      get emitter() {\n        return openApiRef.current.emitter;\n      }\n    };\n  }, [openApiRef]);\n};\n\nconst FormApiProvider = ({ openApi, children }) => {\n  const openApiRef = useRef(openApi);\n  openApiRef.current = openApi;\n  return <Provider value={{ openApiRef }}>{children}</Provider>;\n};\n\nexport default FormApiProvider;\n","import { createContext, useContext } from 'react';\n\nconst context = createContext({});\n\nexport default context;\nexport const { Provider, Consumer } = context;\nexport const useFormContext = () => useContext(context);\n","const getFieldUtils = formContextRef => {\n  const getField = (id, callback) => {\n    let field = formContextRef.current.getFormState().get(id);\n    if (!field) {\n      return;\n    }\n    return callback(field.clone());\n  };\n\n  const setFieldInfo = field => {\n    return formContextRef.current.setFormState(formState => {\n      if (!formState.get(field.id)) {\n        return formState;\n      }\n      const newFormState = new Map(formState);\n      newFormState.set(field.id, field);\n      return newFormState;\n    });\n  };\n\n  return { getField, setFieldInfo };\n};\n\nexport default getFieldUtils;\n","const getIdlePromise = (...args) => {\n  return new Promise(resolve =>\n    setTimeout(() => {\n      resolve(...args);\n    }, 0)\n  );\n};\n\nexport default getIdlePromise;\n","const groupKey = (groupId, groupName) => {\n  return `${groupId || 'root'}@${groupName}`;\n};\n\nexport default groupKey;\n","import { useRef, useEffect } from 'react';\nimport { useFormContext } from '../formContext';\nimport createFieldAddEvent from './event/createFieldAddEvent';\nimport createFieldChangeEvent from './event/createFieldChangeEvent';\nimport createFieldRemoveEvent from './event/createFieldRemoveEvent';\nimport createSubmitEvent from './event/createSubmitEvent';\nimport createValidateEvent from './event/createValidateEvent';\nimport createResetEvent from './event/createResetEvent';\nimport createSetDataEvent from './event/createSetDataEvent';\nimport createSetFieldsEvent from './event/createSetFieldsEvent';\nimport createGroupChangeEvent from './event/createGroupChangeEvent';\nimport createGroupRemoveEvent from './event/createGroupRemoveEvent';\n\nconst FormEvent = ({ children }) => {\n  const formContext = useFormContext();\n  const formContextRef = useRef(formContext);\n  formContextRef.current = formContext;\n  useEffect(() => {\n    const { emitter, setFormIsMount } = formContextRef.current;\n    //1. 设置表单为挂载状态\n    setFormIsMount(true);\n    emitter.emit('form:mount');\n    return () => {\n      //3. 设置表单为卸载状态\n      emitter.emit('form:unmount');\n    };\n  }, []);\n  useEffect(() => {\n    const { emitter } = formContextRef.current;\n    emitter.addListener('form:field:add', createFieldAddEvent(formContextRef));\n    emitter.addListener('form:field:change', createFieldChangeEvent(formContextRef));\n    emitter.addListener('form:field:remove', createFieldRemoveEvent(formContextRef));\n    emitter.addListener('form:validate', createValidateEvent(formContextRef));\n    emitter.addListener('form:reset', createResetEvent(formContextRef));\n    emitter.addListener('form:set-data', createSetDataEvent(formContextRef));\n    emitter.addListener('form:set-fields', createSetFieldsEvent(formContextRef));\n    emitter.addListener('form:submit', createSubmitEvent(formContextRef));\n\n    emitter.addListener('form-group:change', createGroupChangeEvent(formContextRef));\n    emitter.addListener('form-group:remove', createGroupRemoveEvent(formContextRef));\n\n    return () => {\n      emitter.removeAllListeners();\n    };\n  }, []);\n  return children;\n};\n\nexport default FormEvent;\n","import Field from '../../core/Field';\n\nconst createFieldAddEvent =\n  formContextRef =>\n  ({ id, name, associations }) => {\n    const { setFormState, interceptor, emitter } = formContextRef.current;\n    setFormState(formState => {\n      const newState = new Map(formState);\n      newState.set(\n        id,\n        new Field({\n          id,\n          name,\n          formInterceptor: interceptor,\n          associations\n        })\n      );\n      return newState;\n    });\n    emitter.emit(`form-field:mount:${id}`);\n  };\n\nexport default createFieldAddEvent;\n","import getFieldUtils from '../../core/getFieldUtils';\n\nconst createFieldChangeEvent =\n  formContextRef =>\n  async ({ id, defaultValue, ...fieldProps }) => {\n    const { setFormState, initFormData, emitter } = formContextRef.current;\n    const { getField } = getFieldUtils(formContextRef);\n    getField(id, async field => {\n      field.setInfo(fieldProps);\n      (() => {\n        if (field.value !== void 0) {\n          return;\n        }\n        const fieldInitData = field.getValueFromFormData(initFormData);\n        if (fieldInitData) {\n          field.setFieldValue(fieldInitData);\n          return;\n        }\n        if (defaultValue !== void 0) {\n          field.setFieldValue(defaultValue);\n        }\n      })();\n      setFormState(formState => {\n        const newState = new Map(formState);\n        newState.set(id, field);\n        return newState;\n      });\n\n      if (field.value !== void 0) {\n        emitter.emit(`form-field:input:${field.id}`, { value: field.value });\n      }\n      emitter.emit(`form:field:ready`, field);\n    });\n  };\n\nexport default createFieldChangeEvent;\n","const createFieldRemoveEvent =\n  formContextRef =>\n  ({ id }) => {\n    const { setFormState } = formContextRef.current;\n    setFormState(formState => {\n      const newFormState = new Map(formState);\n      newFormState.delete(id);\n      return newFormState;\n    });\n  };\n\nexport default createFieldRemoveEvent;\n","const createValidateEvent = formContextRef => () => {\n  const { formState, emitter } = formContextRef.current;\n  Array.from(formState.values()).forEach(field => {\n    emitter.emit(`form-field:validate:${field.id}`);\n  });\n};\n\nexport default createValidateEvent;\n","const createResetEvent = formContextRef => () => {\n  const { getFormState, emitter } = formContextRef.current;\n  Array.from(getFormState().values()).forEach(field => {\n    emitter.emit(`form-field:input:${field.id}`, { value: void 0 });\n  });\n};\n\nexport default createResetEvent;\n","import getIdlePromise from '../../core/getIdlePromise';\n\nconst createSetDataEvent =\n  formContextRef =>\n  async ({ data, runValidate = true }) => {\n    const { setFormState, emitter } = formContextRef.current;\n    setFormState(formState => {\n      const newState = new Map();\n      Array.from(formState.values()).forEach(field => {\n        if (!field.isReady) {\n          return;\n        }\n        const newField = field.clone();\n        newField.setFieldValue(newField.getValueFromFormData(data));\n        newState.set(field.id, newField);\n        emitter.emit(`form-field:input:${field.id}`, { value: newField.value });\n      });\n      return newState;\n    });\n    await getIdlePromise();\n    runValidate &&\n      Array.from(formContextRef.current.formState.values()).forEach(field => {\n        emitter.emit(`form-field:validate:${field.id}`);\n      });\n  };\n\nexport default createSetDataEvent;\n","import Field from '../../core/Field';\nimport getFieldUtils from '../../core/getFieldUtils';\nimport isNil from 'lodash/isNil';\nimport get from 'lodash/get';\n\nconst createSetFieldsEvent =\n  formContextRef =>\n  async ({ data, runValidate = true }) => {\n    const { emitter, getFormState } = formContextRef.current;\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n\n    const { setFieldInfo, getField } = getFieldUtils(formContextRef);\n\n    const validateFieldIdList = [];\n    data.forEach(item => {\n      const { name, groupName, groupIndex, value, validate } = Object.assign({}, item);\n      const fields = Field.matchFields(getFormState(), { name, groupName, groupIndex });\n      fields &&\n        fields.length > 0 &&\n        fields.forEach(field => {\n          if (!field.isReady) {\n            return;\n          }\n          if (item.hasOwnProperty('value')) {\n            emitter.emit(`form-field:input:${field.id}`, { value: isNil(name) ? get(value, field.name) : value });\n          }\n          getField(field.id, field => {\n            validate ? field.setValidateStatus(validate) : validateFieldIdList.push(field.id);\n            setFieldInfo(field);\n          });\n        });\n    });\n    runValidate &&\n      validateFieldIdList.forEach(id => {\n        emitter.emit(`form-field:validate:${id}`);\n      });\n  };\n\nexport default createSetFieldsEvent;\n","import Field from '../../core/Field';\nimport { filterEmpty } from '../../core/empty';\n\nconst createSubmitEvent =\n  formContextRef =>\n  async (...args) => {\n    const { task, emitter, noFilter, onError, onPrevSubmit, onSubmit, onComplete } = formContextRef.current;\n    formContextRef.current.getFormState().forEach(value => {\n      emitter.emit(`form-field:validate:${value.id}`);\n    });\n    let errors = [],\n      isPass = false,\n      formData = {};\n    try {\n      await task.target;\n      isPass = Field.stateToIsPass(formContextRef.current.getFormState());\n      if (!isPass) {\n        errors = Field.stateToError(formContextRef.current.getFormState());\n        emitter.emit('form:submit:error', errors);\n        onError && (await onError(errors, ...args));\n      } else {\n        const targetFormData = Field.computedFormDataFormState(formContextRef.current.getFormState());\n        formData = noFilter === true ? targetFormData : filterEmpty(targetFormData);\n\n        emitter.emit('form:prev-submit', formData, ...args);\n        if (onPrevSubmit && (await onPrevSubmit(formData, ...args)) === false) {\n          emitter.emit('form:prev-submit:error');\n          return false;\n        }\n        onSubmit && (await onSubmit(formData, ...args));\n        emitter.emit('form:submit:success', formData, ...args);\n      }\n    } catch (e) {\n      console.error(e);\n      emitter.emit('form:error', errors, ...args, e);\n      onError && onError(errors, ...args, e);\n    }\n    emitter.emit('form:submit:complete', { formData, isPass, errors });\n    onComplete && onComplete({ formData, isPass, errors });\n  };\n\nexport default createSubmitEvent;\n","import groupKey from '../../core/groupKey';\n\nconst createGroupChangeEvent =\n  formContextRef =>\n  ({ parentId, name, list }) => {\n    const { setGroup } = formContextRef.current;\n    setGroup(group => {\n      const newGroup = Object.assign({}, group);\n      const key = groupKey(parentId, name);\n      newGroup[key] = list.slice(0);\n      return newGroup;\n    });\n  };\n\nexport default createGroupChangeEvent;\n","import groupKey from '../../core/groupKey';\n\nconst createGroupRemoveEvent =\n  formContextRef =>\n  ({ parentId, name }) => {\n    const { setGroup } = formContextRef.current;\n    setGroup(group => {\n      const newGroup = Object.assign({}, group);\n      const key = groupKey(parentId, name);\n      if (!newGroup[key]) {\n        return;\n      }\n      delete newGroup[key];\n      return newGroup;\n    });\n  };\n\nexport default createGroupRemoveEvent;\n","import compose from '@kne/compose';\nimport uniqBy from 'lodash/uniqBy';\nimport get from 'lodash/get';\n\nconst interceptors = {\n  input: [],\n  output: []\n};\n\ninterceptors.input.use = (name, func) => {\n  return interceptors.input.push({\n    name,\n    exec: func\n  });\n};\n\ninterceptors.output.use = (name, func) => {\n  return interceptors.output.push({\n    name,\n    exec: func\n  });\n};\n\nexport default interceptors;\n\nconst baseInterceptors = interceptors;\n\nexport const runInterceptors = (interceptors, type, names) => {\n  if (!Array.isArray(names)) {\n    names = [names];\n  }\n\n  const currentInterceptors = uniqBy(\n    baseInterceptors[type]\n      .concat(get(interceptors, type, []))\n      .filter(({ name }) => names.indexOf(name) > -1)\n      .reverse(),\n    ({ name }) => name\n  );\n\n  if (currentInterceptors.length === 0) {\n    return value => value;\n  }\n  return compose(...currentInterceptors.map(({ exec }) => exec));\n};\n","import { useRef, useState } from 'react';\nimport getIdlePromise from '../core/getIdlePromise';\n\nexport const FORM_TASK_STATE_ENUM = {\n  PENDING: 'PENDING',\n  COMPLETE: 'COMPLETE'\n};\n\nclass Task {\n  constructor({ id, runner }) {\n    this.id = id;\n    this.isCancel = false;\n    this.target = Promise.race([\n      Promise.resolve(runner()),\n      new Promise(resolve => {\n        this.resolve = resolve;\n      })\n    ]);\n  }\n\n  cancel(...args) {\n    if (this.isCancel) {\n      return;\n    }\n\n    this.isCancel = true;\n    this.resolve(...args);\n  }\n}\n\nclass TaskList {\n  constructor({ onChange }) {\n    this.list = new Map();\n    this.onChange = onChange;\n  }\n\n  get isComplete() {\n    return this.list.size === 0;\n  }\n\n  async append(id, runner) {\n    const task = new Task({ id, runner });\n    this.expire(id);\n    this.list.set(id, task);\n    task.target.then(() => {\n      this.list.delete(id);\n      this.onChange();\n    });\n    this.onChange();\n    return task.target;\n  }\n\n  expire(id) {\n    const currentTask = this.list.get(id);\n    if (currentTask) {\n      currentTask.cancel();\n      this.list.delete(id);\n    }\n    return this;\n  }\n}\n\nconst useFormTask = () => {\n  const [state, setState] = useState(FORM_TASK_STATE_ENUM.COMPLETE);\n  const taskRef = useRef(\n    new TaskList({\n      onChange() {\n        setState(this.isComplete ? FORM_TASK_STATE_ENUM.COMPLETE : FORM_TASK_STATE_ENUM.PENDING);\n      }\n    })\n  );\n  return {\n    state,\n    append: (id, runner) => {\n      return taskRef.current.append(id, runner);\n    },\n    expire: id => {\n      return taskRef.current.expire(id);\n    },\n    get target() {\n      return getIdlePromise()\n        .then(() => Promise.all(Array.from(taskRef.current.list.values()).map(task => task.target)))\n        .then(getIdlePromise);\n    }\n  };\n};\n\nexport default useFormTask;\n","import { isNotEmpty } from './empty';\n\nconst RULES = {\n  REQ: function (value) {\n    return {\n      result: isNotEmpty(value),\n      errMsg: ''\n    };\n  },\n  TEL: function (value) {\n    return {\n      result: /^1[0-9]{10}$/.test(value),\n      errMsg: '请输入有效的手机号'\n    };\n  },\n  EMAIL: function (value) {\n    return {\n      result: /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(value),\n      errMsg: '请输入有效的邮箱'\n    };\n  },\n  LEN: function (value, start, end) {\n    value = value.toString();\n    if (end === start && value.length !== Number(end)) {\n      return {\n        result: false,\n        errMsg: `%s长度必须等于${end}`\n      };\n    }\n    if (value.length < start) {\n      return {\n        result: false,\n        errMsg: `%s长度必须大于${start}`\n      };\n    }\n    if (end && value.length > end) {\n      return {\n        result: false,\n        errMsg: `%s长度必须小于${end}`\n      };\n    }\n    return { result: true };\n  }\n};\nexport default RULES;\nexport const presetRules = (newRules = {}) => {\n  Object.assign(RULES, newRules);\n};\n","import React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { Provider } from '../formContext';\nimport FormEvent from './FormEvent';\nimport FormApiProvider from './FormApiProvider';\nimport useFormGroup from './useFormGroup';\nimport useInterceptors from './useInterceptors';\nimport useEvent from '@kne/use-event';\nimport useFormTask from './useFormTask';\nimport useOpenApi from './useOpenApi';\nimport RULES from '../core/RULES';\n\nconst Form = forwardRef(({ data, rules, interceptors, debug, noFilter, onPrevSubmit, onSubmit, onError, onFormDataChange, children }, ref) => {\n  const [formState, setFormState] = useState(new Map());\n  const formStateRef = useRef(formState);\n  const [formIsMount, setFormIsMount] = useState(false);\n  const task = useFormTask();\n  const emitter = useEvent({ debug, name: 'react-form3' });\n  const { group, setGroup } = useFormGroup();\n  const openApi = useOpenApi({ emitter, formStateRef });\n  const interceptor = useInterceptors({ interceptors });\n  useImperativeHandle(ref, () => openApi, [openApi]);\n\n  return (\n    <Provider\n      value={{\n        emitter,\n        openApi,\n        task,\n        formState,\n        getFormState() {\n          return formStateRef.current;\n        },\n        setFormState(input) {\n          const newFormState = typeof input === 'function' ? input(formStateRef.current) : input;\n          formStateRef.current = newFormState;\n          setFormState(newFormState);\n          return newFormState;\n        },\n        formIsMount,\n        setFormIsMount,\n        group,\n        setGroup,\n        initFormData: Object.assign({}, data),\n        rules: Object.assign({}, RULES, rules),\n        interceptor,\n        debug,\n        noFilter,\n        onPrevSubmit,\n        onSubmit,\n        onError,\n        onFormDataChange\n      }}\n    >\n      <FormApiProvider openApi={openApi}>\n        <FormEvent>{children}</FormEvent>\n      </FormApiProvider>\n    </Provider>\n  );\n});\n\nexport default Form;\n","import { useState } from 'react';\n\nconst useFormGroup = () => {\n  const [group, setGroup] = useState(new Map());\n\n  return { group, setGroup };\n};\nexport default useFormGroup;\n","import { useMemo } from 'react';\nimport Field from '../core/Field';\n\nconst useOpenApi = ({ formStateRef, emitter }) => {\n  return useMemo(() => {\n    return {\n      emitter,\n      submit: (...args) => {\n        emitter.emit('form:submit', args);\n      },\n      get isPass() {\n        return Field.stateToIsPass(formStateRef.current);\n      },\n      get formState() {\n        return new Map(formStateRef.current);\n      },\n      get data() {\n        return Field.computedFormDataFormState(formStateRef.current);\n      },\n      set data(data) {\n        emitter.emit('form:set-data', { data });\n      },\n      get errors() {\n        return Field.stateToError(formStateRef.current);\n      },\n      reset() {\n        emitter.emit('form:reset');\n      },\n      onReady(callback) {\n        emitter.addListener('form:mount', () => {\n          callback && callback();\n        });\n      },\n      onDestroy(callback) {\n        emitter.addListener('form:unmount', () => {\n          callback && callback();\n        });\n      },\n      validateField({ name, groupName, groupIndex }) {\n        const field = Field.findField(formStateRef.current, { name, groupName, groupIndex });\n        if (!field) {\n          return;\n        }\n        emitter.emit(`form-field:validate:${field.id}`);\n      },\n      validateAll() {\n        emitter.emit('form:validate');\n      },\n      setFormData: (data, runValidate = true) => {\n        emitter.emit('form:set-data', { data, runValidate });\n      },\n      getFormData() {\n        return Field.computedFormDataFormState(formStateRef.current);\n      },\n      getField({ name, groupName, groupIndex }) {\n        return Field.findField(formStateRef.current, { name, groupName, groupIndex });\n      },\n      getFields({ name, groupName, groupIndex }) {\n        return Field.matchFields(formStateRef.current, { name, groupName, groupIndex });\n      },\n      setFieldValidate({ name, validate, groupName, groupIndex }) {\n        if (!validate) {\n          console.error('必须设置validate参数');\n          return;\n        }\n        emitter.emit('form:set-fields', {\n          data: {\n            name,\n            groupName,\n            groupIndex,\n            validate\n          }\n        });\n      },\n      setField(list, options) {\n        emitter.emit('form:set-fields', Object.assign({}, options, { data: list }));\n      },\n      setFields(list, options) {\n        emitter.emit('form:set-fields', Object.assign({}, options, { data: list }));\n      },\n      setFieldValue({ name, groupName, groupIndex, validate }, value, options) {\n        emitter.emit(\n          'form:set-fields',\n          Object.assign({}, options, {\n            data: {\n              name,\n              groupName,\n              groupIndex,\n              value,\n              validate\n            }\n          })\n        );\n      }\n    };\n  }, [formStateRef, emitter]);\n};\n\nexport default useOpenApi;\n","import { runInterceptors } from '../core/interceptors';\nimport useRefCallback from '@kne/use-ref-callback';\n\nconst useInterceptors = ({ interceptors }) => {\n  const input = useRefCallback(({ value, interceptor }) => {\n      return runInterceptors(interceptors, 'input', interceptor)(value);\n    }),\n    output = useRefCallback(({ value, interceptor }) => {\n      return runInterceptors(interceptors, 'output', interceptor)(value);\n    });\n  return { input, output };\n};\n\nexport default useInterceptors;\n","import { createContext, useContext } from 'react';\n\nconst context = createContext({ id: 'root' });\n\nexport const { Provider } = context;\n\nexport const useGroupContext = () => {\n  return useContext(context);\n};\n\nexport default context;\n","import React, { useMemo } from 'react';\nimport { Provider, useGroupContext } from './context';\nimport { useFormContext } from '../formContext';\nimport groupKey from '../core/groupKey';\nimport get from 'lodash/get';\n\nconst Group = ({ id, name, children, defaultValue }) => {\n  const { group } = useFormContext();\n  const { id: parentId, index: parentIndex, name: parentName } = useGroupContext();\n\n  const index = useMemo(() => {\n    return get(group, groupKey(parentId, name), []).findIndex(item => item.id === id);\n  }, [id, parentId, group, name]);\n\n  const groupName = useMemo(() => {\n    if (index > -1 && parentName) {\n      return `${parentName}[${parentIndex}].${name}`;\n    }\n    return name;\n  }, [parentName, name, index, parentIndex]);\n\n  return (\n    <Provider value={{ id, name: groupName, group, index, defaultValue }}>\n      {children({\n        id,\n        name: groupName,\n        group,\n        index\n      })}\n    </Provider>\n  );\n};\n\nexport default Group;\n","import React, { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useFormContext } from '../formContext';\nimport { useGroupContext } from './context';\nimport useRefCallback from '@kne/use-ref-callback';\nimport get from 'lodash/get';\nimport range from 'lodash/range';\nimport Group from './Group';\nimport uniqueId from 'lodash/uniqueId';\n\nconst GroupList = forwardRef(({ name, defaultLength = 1, empty, reverseOrder = true, children }, ref) => {\n  const [list, setList] = useState([]);\n  const listRef = useRef(list);\n  listRef.current = list;\n  const { initFormData: initData, emitter } = useFormContext();\n  const { id: parentId, name: parentName, index: parentIndex } = useGroupContext();\n\n  const groupName = useMemo(() => {\n    if (parentIndex > -1 && parentName) {\n      return `${parentName}[${parentIndex}]`;\n    }\n    return '';\n  }, [parentName, parentIndex]);\n\n  const targetPath = groupName ? `${groupName}.${name}` : name;\n\n  const itemIdGenerator = item => Object.assign({}, item, { id: parentId ? uniqueId(parentId + '-') : uniqueId() });\n\n  const bindEvent = useRefCallback(({ groupName, name }) => {\n    const setListFromFormData = value => {\n      const targetList = (() => {\n        if (Number.isInteger(defaultLength) && defaultLength > 0 && !(Array.isArray(value) && value.length >= defaultLength)) {\n          return range(0, defaultLength).map(index => {\n            return listRef.current[index] || itemIdGenerator();\n          });\n        }\n        if (Array.isArray(value)) {\n          return value.map((item, index) => {\n            return listRef.current[index] || itemIdGenerator({ defaultValue: item });\n          });\n        }\n        return [];\n      })();\n      setList(targetList);\n    };\n\n    setListFromFormData(get(initData, groupName ? `${groupName}.${name}` : name));\n    const sub = emitter.addListener('form:set-data', ({ data }) => {\n      setListFromFormData(get(data, groupName ? `${groupName}.${name}` : name));\n    });\n    return () => {\n      sub.remove();\n    };\n  });\n\n  useEffect(() => {\n    emitter.emit('form-group:change', { parentId, name, list });\n  }, [list, parentId, name, emitter]);\n\n  useEffect(() => {\n    return () => {\n      emitter.emit('form-group:remove', { parentId, name });\n    };\n  }, [parentId, name]);\n\n  useEffect(() => {\n    return bindEvent({ groupName, name });\n  }, [groupName, name]);\n\n  const addHandler = useRefCallback(options => {\n    const { isUnshift, defaultValue } = Object.assign({ isUnshift: false }, options);\n    setList(list => {\n      if (list.length === 0) {\n        return [{ id: uniqueId(parentId) }];\n      }\n      const newList = list.slice(0);\n      newList[isUnshift ? 'unshift' : 'push'](itemIdGenerator({ defaultValue }));\n      return newList;\n    });\n  });\n\n  const removeHandler = useRefCallback(id => {\n    setList(list => {\n      const index = list.findIndex(item => item.id === id);\n      const target = get(initData, targetPath);\n      if (Array.isArray(target)) {\n        target.splice(index, 1);\n      }\n      const newList = list.slice(0);\n      newList.splice(index, 1);\n      return newList;\n    });\n  });\n\n  useImperativeHandle(ref, () => {\n    return {\n      onAdd: addHandler,\n      onRemove: removeHandler\n    };\n  });\n\n  if (list.length === 0) {\n    return empty;\n  }\n\n  return (reverseOrder ? list.slice(0).reverse() : list).map(({ id, defaultValue }) => {\n    return (\n      <Group key={id} id={id} name={name} defaultValue={defaultValue}>\n        {({ index }) => {\n          return children({\n            id,\n            index,\n            length: list.length,\n            onAdd: addHandler,\n            onRemove: () => removeHandler(id)\n          });\n        }}\n      </Group>\n    );\n  });\n});\n\nexport default GroupList;\n","import get from 'lodash/get';\n\nconst isEvent = event => {\n  return window.Event && (event instanceof window.Event || get(event, 'nativeEvent') instanceof window.Event || typeof get(event, 'preventDefault') === 'function');\n};\n\nconst getFieldValue = (event, value) => {\n  if (isEvent(event)) {\n    if (value === undefined) {\n      switch (event.target.type) {\n        case 'checkbox':\n        case 'radio':\n          value = event.target.checked;\n          break;\n        default:\n          value = event.target.value;\n      }\n    }\n  } else {\n    value = event;\n  }\n  return value;\n};\n\nexport default getFieldValue;\n","import { useId, useState } from 'react';\nimport { useGroup } from '../Group';\nimport { useFormContext } from '../formContext';\nimport useFieldInit from './useFieldInit';\nimport useFieldEvent from './useFieldEvent';\nimport get from 'lodash/get';\nimport Field from '../core/Field';\n\nconst useField = ({ name, rule, label, interceptor, associations, noTrim, debounce: time = 0, onChange, defaultValue, errMsg, ...args }) => {\n  const id = useId();\n  const { index: groupIndex, name: groupName, defaultValue: defaultGroupValue } = useGroup();\n  const { formState } = useFormContext();\n  const [associationOptions, setAssociationOptions] = useState({});\n\n  const fieldRef = useFieldInit({\n    name,\n    rule,\n    label,\n    interceptor,\n    associations: {\n      fields: get(associations, 'fields', []),\n      callback: (...args) => {\n        setAssociationOptions(Object.assign({}, associations?.callback(...args)));\n      }\n    },\n    noTrim,\n    defaultValue: get(defaultGroupValue, name) || defaultValue,\n    id,\n    groupName,\n    groupIndex,\n    errMsg\n  });\n  const { validate, isValueChanged, dataChange, value } = useFieldEvent({ id, time, onChange });\n  const field = formState.get(id),\n    formData = Field.computedFormDataFormState(formState);\n  const outputProps = {\n    ...args,\n    id,\n    name,\n    label,\n    value,\n    fieldRef,\n    formData,\n    formState,\n    rule,\n    groupName,\n    groupIndex,\n    onChange: dataChange,\n    isValueChanged,\n    triggerValidate: validate,\n    associationOptions\n  };\n\n  if (!field) {\n    return outputProps;\n  }\n\n  return Object.assign({}, outputProps, {\n    value: value,\n    errState: field.getErrState(),\n    errMsg: field.getErrMsg()\n  });\n};\n\nexport default useField;\n","import { useEffect, useRef, useState } from 'react';\nimport { useFormContext } from '../formContext';\n\nconst useFieldInit = ({ name, rule, label, interceptor, associations, noTrim, defaultValue, id, groupName, groupIndex, errMsg }) => {\n  const [fieldIsMount, setFieldIsMount] = useState(false);\n  const fieldRef = useRef(null);\n  const { formIsMount, emitter } = useFormContext();\n  const associationsRef = useRef(associations);\n  useEffect(() => {\n    let isEmit = false;\n    if (formIsMount) {\n      isEmit = true;\n      setFieldIsMount(true);\n      emitter.emit('form:field:add', { name, associations: associationsRef.current, id });\n    }\n    return () => {\n      isEmit && emitter.emit('form:field:remove', { id });\n    };\n  }, [formIsMount, emitter, name, id]);\n\n  useEffect(() => {\n    if (fieldIsMount && groupIndex !== -1) {\n      emitter.emit('form:field:change', {\n        name,\n        rule,\n        label,\n        interceptor,\n        noTrim,\n        id,\n        groupName,\n        groupIndex,\n        defaultValue,\n        fieldRef,\n        errMsg\n      });\n    }\n  }, [fieldIsMount, emitter, name, rule, label, interceptor, noTrim, id, groupName, groupIndex, defaultValue, fieldRef, errMsg]);\n\n  return fieldRef;\n};\n\nexport default useFieldInit;\n","import { useEffect, useState, useRef } from 'react';\nimport { useFormContext } from '../formContext';\nimport getIdlePromise from '../core/getIdlePromise';\nimport Field, { FORM_FIELD_VALIDATE_STATE_ENUM } from '../core/Field';\nimport useRefCallback from '@kne/use-ref-callback';\nimport getFieldValue from '../core/getFieldValue';\nimport getFieldUtils from '../core/getFieldUtils';\nimport { useDebouncedCallback } from 'use-debounce';\n\nconst useFieldEvent = ({ id, defaultValue, onChange, time }) => {\n  const formContext = useFormContext();\n  const { formIsMount } = formContext;\n  const formContextRef = useRef(formContext);\n  formContextRef.current = formContext;\n  const [isValueChanged, setIsValueChanged] = useState(false);\n  const [value, setValue] = useState(defaultValue);\n  useEffect(() => {\n    if (!formIsMount) {\n      return;\n    }\n    const { getField, setFieldInfo } = getFieldUtils(formContextRef);\n    const { emitter } = formContextRef.current;\n    const listenerTokens = [\n      emitter.addListener(`form-field:input:${id}`, ({ value }) => {\n        setValue(value);\n        setIsValueChanged(true);\n        getField(id, async field => {\n          field.setValue(value);\n          setFieldInfo(field);\n          if (field.getFieldValue() !== void 0) {\n            emitter.emit('form:field:set-value', { id, value: field.getFieldValue(), path: field.path });\n            emitter.emit(`form-field:associations:${id}`);\n          }\n        });\n      }),\n      emitter.addListener(`form-field:format:${id}`, ({ format }) => {\n        getField(id, field => {\n          const formatValue = format(field.value);\n          if (field.value !== formatValue) {\n            emitter.emit(`form-field:input:${id}`, { value: formatValue });\n          }\n        });\n      }),\n      emitter.addListener(`form-field:validate:${id}`, async () => {\n        const { rules, task } = formContextRef.current;\n\n        await task.append(id, async () => {\n          getField(id, async field => {\n            field.setValidateStatus({ status: FORM_FIELD_VALIDATE_STATE_ENUM.PENDING });\n            setFieldInfo(field);\n          });\n          getField(id, field => {\n            //处理空格情况\n            if (field.noTrim !== true) {\n              typeof field.value === 'string' && emitter.emit(`form-field:format:${id}`, { format: value => value.trim() });\n            }\n          });\n\n          getField(id, async field => {\n            //添加到校验任务队列\n            await field.runValidate(rules, () => Field.computedFormDataFormState(formContextRef.current.getFormState()));\n            setFieldInfo(field);\n            emitter.emit(`form-field:validate:complete:${id}`, {\n              validate: field.validate\n            });\n          });\n        });\n      }),\n      emitter.addListener(`form-field:associations:${id}`, async () => {\n        const { getFormState, openApi } = formContextRef.current;\n        getField(id, originField => {\n          Field.matchAssociationFields(getFormState(), originField).forEach(field => {\n            emitter.emit('form-field:associations:callback', { target: field, origin: originField });\n            field.associations?.callback({ target: field, origin: originField, openApi });\n          });\n        });\n      })\n    ];\n    return () => {\n      listenerTokens.forEach(token => {\n        token.remove();\n      });\n    };\n  }, [formIsMount]);\n\n  const dataChange = useRefCallback((...args) => {\n    onChange && onChange(...args);\n    const { emitter } = formContextRef.current;\n    const value = getFieldValue(...args);\n    emitter.emit(`form-field:input:${id}`, { value });\n  });\n\n  const checkValidate = useRefCallback(() => {\n    const { emitter } = formContextRef.current;\n    emitter.emit(`form-field:validate:${id}`);\n  });\n  const debouncedCheckValidate = useDebouncedCallback(checkValidate, time),\n    cancel = debouncedCheckValidate.cancel;\n\n  useEffect(() => {\n    const { emitter } = formContextRef.current;\n    const subscription = emitter.addListener('form:reset', cancel);\n    return () => {\n      subscription && subscription.remove();\n    };\n  }, [cancel]);\n\n  const validate = time ? debouncedCheckValidate : checkValidate;\n\n  return { isValueChanged, value, dataChange, validate };\n};\n\nexport default useFieldEvent;\n","import { useCallback } from 'react';\nimport { useFormContext } from './formContext';\n\nconst useReset = () => {\n  const { emitter } = useFormContext();\n  return {\n    onClick: useCallback(() => {\n      emitter.emit('form:reset');\n    }, [emitter])\n  };\n};\n\nexport default useReset;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useFormContext } from './formContext';\nimport getIdlePromise from './core/getIdlePromise';\n\nconst useSubmit = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { isPass, emitter } = useFormContext();\n  const { onClick } = Object.assign({}, props);\n  useEffect(() => {\n    const target = emitter.addListener('form:submit:complete', () => {\n      setIsLoading(false);\n    });\n    return () => {\n      target && target.remove();\n    };\n  }, [emitter]);\n  return {\n    isLoading,\n    isPass,\n    onClick: useCallback(\n      async (...args) => {\n        setIsLoading(true);\n        try {\n          await getIdlePromise();\n          const returnArgs = onClick && (await onClick(...args));\n          emitter.emit('form:submit', returnArgs || args);\n        } catch (e) {\n          console.error(e);\n        }\n      },\n      [emitter, setIsLoading]\n    )\n  };\n};\n\nexport default useSubmit;\n","import { filterEmpty, isEmpty, isNotEmpty } from './core/empty';\nimport compileErrMsg from './core/compileErrMsg';\nimport Field from './core/Field';\nimport { useFormApi } from './Form/FormApiProvider';\n\nconst stateToIsPass = Field.stateToIsPass,\n  stateToError = Field.stateToError,\n  computedFormDataFormState = Field.computedFormDataFormState,\n  findField = Field.findField,\n  matchFields = Field.matchFields,\n  computedFieldValueFromFormData = Field.computedFieldValueFromFormData;\n\nexport { default } from './Form';\nexport {\n  isNotEmpty,\n  isEmpty,\n  filterEmpty,\n  compileErrMsg,\n  stateToIsPass,\n  stateToError,\n  computedFormDataFormState,\n  findField,\n  matchFields,\n  computedFieldValueFromFormData,\n  useFormApi, // 此处为兼容老版本操作，请尽量使用useFormApi\n  useFormApi as useFormContext\n};\nexport { default as useField } from './Field/useField';\nexport { GroupList, useGroup } from './Group';\nexport { presetRules as preset, default as RULES } from './core/RULES';\nexport { default as interceptors } from './core/interceptors';\nexport { default as useReset } from './useReset';\nexport { default as useSubmit } from './useSubmit';\n\nexport const formUtils = {\n  isNotEmpty,\n  isEmpty,\n  filterEmpty,\n  compileErrMsg,\n  stateToIsPass,\n  stateToError,\n  computedFormDataFormState,\n  findField,\n  matchFields,\n  computedFieldValueFromFormData\n};\n"],"names":["isNotEmpty","value","isPlainObject","values","getValues","length","some","item","isArray","isNaN","undefined","isEmpty","filterEmpty","arguments","map","filter","output","Object","keys","forEach","key","current","compileErrMsg","errMsg","label","replace","FORM_FIELD_STATE_ENUM","FORM_FIELD_VALIDATE_STATE_ENUM","Field","constructor","_ref3","id","name","associations","formInterceptor","options","this","groupName","groupIndex","state","fieldRef","fields","get","callback","validate","status","assign","isReady","isPass","setInfo","_ref4","rule","interceptor","noTrim","path","getFieldValuePath","getValueFromFormData","formData","computedFieldValueFromFormData","setFieldValue","setValue","input","getFieldValue","getErrState","getErrMsg","msg","setValidateStatus","_ref5","validateData","runValidate","rules","getFormData","async","field","formRules","_ref2","data","RegExp","result","test","split","str","currentRule","args","exec","toUpperCase","res","console","error","ruleValidate","clone","deleteValue","_Field","stateToError","memoize","formState","Array","from","findField","token","find","matchField","isNil","every","matchFields","target","matchAssociationFields","last","computedFormDataFormState","transform","fieldValue","set","stateToIsPass","context$2","createContext","Provider$2","Consumer","Consumer$1","useFormApi","openApiRef","useContext","useMemo","openApi","errors","emitter","FormApiProvider","_ref6","children","useRef","React","context$1","Provider$1","useFormContext","getFieldUtils","formContextRef","getField","getFormState","setFieldInfo","setFormState","newFormState","Map","getIdlePromise","_len2","_key2","Promise","resolve","setTimeout","groupKey","groupId","FormEvent","_ref13","formContext","useEffect","setFormIsMount","emit","addListener","_ref7","newState","createFieldAddEvent","defaultValue","_ref","fieldProps","_objectWithoutPropertiesLoose","_excluded$1","initFormData","fieldInitData","createFieldChangeEvent","_ref8","delete","createFieldRemoveEvent","createValidateEvent","createResetEvent","_runValidate","_ref9","newField","createSetDataEvent","_ref10","validateFieldIdList","hasOwnProperty","push","createSetFieldsEvent","task","noFilter","onError","onPrevSubmit","onSubmit","onComplete","_len","_key","targetFormData","e","createSubmitEvent","_ref11","parentId","list","setGroup","group","newGroup","slice","createGroupChangeEvent","_ref12","createGroupRemoveEvent","removeAllListeners","interceptors","use","func","baseInterceptors","runInterceptors","type","names","currentInterceptors","uniqBy","concat","_ref14","indexOf","reverse","_ref15","compose","_ref16","FORM_TASK_STATE_ENUM","Task","_ref20","runner","isCancel","race","cancel","TaskList","_ref21","onChange","isComplete","size","append","expire","then","currentTask","useFormTask","setState","useState","taskRef","all","RULES","REQ","TEL","EMAIL","LEN","start","end","toString","Number","presetRules","newRules","Form","forwardRef","_ref28","ref","debug","onFormDataChange","formStateRef","formIsMount","useEvent","useFormGroup","_ref22","submit","_len3","_key3","reset","onReady","onDestroy","validateField","_ref23","validateAll","setFormData","_ref24","getFields","_ref25","setFieldValidate","_ref26","setField","setFields","_ref27","useOpenApi","_ref17","useRefCallback","_ref18","_ref19","useInterceptors","useImperativeHandle","context","Provider","useGroupContext","Group","_ref29","index","parentIndex","parentName","findIndex","GroupList","_ref30","defaultLength","_defaultLength","empty","reverseOrder","_reverseOrder","setList","listRef","initData","targetPath","itemIdGenerator","uniqueId","bindEvent","_ref31","setListFromFormData","targetList","isInteger","range","sub","_ref32","remove","addHandler","isUnshift","newList","removeHandler","splice","onAdd","onRemove","_ref33","_ref34","event","window","Event","isEvent","checked","useField","debounce","time","_excluded","useId","defaultGroupValue","associationOptions","setAssociationOptions","_ref35","fieldIsMount","setFieldIsMount","associationsRef","isEmit","useFieldInit","isValueChanged","dataChange","_ref36","setIsValueChanged","listenerTokens","_ref37","_ref38","format","formatValue","trim","originField","_field$associations","origin","checkValidate","debouncedCheckValidate","useDebouncedCallback","subscription","useFieldEvent","outputProps","_extends","triggerValidate","errState","useReset","onClick","useCallback","useSubmit","props","isLoading","setIsLoading","_len4","_key4","returnArgs","formUtils"],"sourceRoot":""}