"use strict";(self.webpackChunk_kne_components_react_form=self.webpackChunk_kne_components_react_form||[]).push([[161],{11448:(n,e,t)=>{var o=t(94922),a=t.n(o),r=t(87558),i=t(55199),s=t(89946),u=t.n(s),l=t(13050),m=t(1488),c=t.n(m),p=t(89261);window.PUBLIC_URL="/react-form";const d={url:"https://uc.fatalent.cn",tpl:"{{url}}/packages/@kne-components/{{remote}}/{{version}}/build"},f={...d,remote:"components-core",defaultVersion:"0.3.0"};(0,l.preset)({remotes:{default:f,"components-core":f,"components-iconfont":{...d,remote:"components-iconfont",defaultVersion:"0.1.8"},"react-form":{...d,remote:"react-form",defaultVersion:"3.1.1"}}});const b=(()=>{const n=u().create({validateStatus:function(){return!0}});return e=>e.hasOwnProperty("loader")&&"function"===typeof e.loader?Promise.resolve(e.loader(c()(e,["loader"]))).then((n=>({data:{code:0,data:n}}))).catch((n=>(i.message.error(n.message||"\u8bf7\u6c42\u53d1\u751f\u9519\u8bef"),{data:{code:500,msg:n.message}}))):n(e)})();(0,r.preset)({ajax:b,loading:(0,p.jsx)(i.Spin,{delay:500,style:{position:"absolute",left:"50%",padding:"10px",transform:"translateX(-50%)"}}),error:null,empty:(0,p.jsx)(i.Empty,{}),transformResponse:n=>{const{data:e}=n;return n.data={code:0===e.code?200:e.code,msg:e.msg,results:e.data},n}});var g=t(65457),R=t(94679),v=t(14152),k=t.n(v),B=(t(91296),t(46446));const C=k().ExampleRoutes,h=n=>{let{preset:e,themeToken:t,...o}=n;return(0,p.jsx)(R.HashRouter,{children:(0,p.jsx)(C,{...o,paths:[{key:"components",path:"/",title:"\u9996\u9875"}],preset:e,themeToken:t,readme:B.default,pageProps:{menu:null}})})};g.createRoot(document.getElementById("root")).render((0,p.jsx)(a().StrictMode,{children:(0,p.jsx)(h,{preset:{ajax:b},themeToken:{colorPrimary:"#4F185A"}})}))},69666:(n,e,t)=>{t.d(e,{A:()=>r});var o=t(23517),a=t(55199);const r={name:"react-form",summary:'<h1>react-form</h1>\n<h3>\u63cf\u8ff0</h3>\n<p>\u7528\u4e8e\u8868\u5355\u7684\u6821\u9a8c</p>\n<h3>\u5b89\u88c5</h3>\n<pre><code class="language-shell">npm i --save @kne/react-form\n</code></pre>',description:"\u7528\u4e8e\u8868\u5355\u7684\u6821\u9a8c",packageName:"@kne/react-form",api:"<table>\n<thead>\n<tr>\n<th>\u5c5e\u6027\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u7c7b\u578b</th>\n<th>\u9ed8\u8ba4\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>",example:{isFull:!1,className:"react_form_5f21f",style:".react_form_5f21f .ant-card {\n  border-color: black;\n  text-align: center;\n  width: 200px;\n}",list:[{title:"\u57fa\u672c\u793a\u4f8b",description:"\u7b80\u5355\u7684form\u5230input\u7ec4\u4ef6\u7684\u7ed1\u5b9a",code:"const { default: ReactForm, useField, useSubmit, useReset } = _ReactForm;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n\n  return (<div>\n    {fieldProps.label}\n    <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? '\u6b63\u5728\u63d0\u4ea4\u4e2d...' : ''}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst BaseExample = () => {\n  return <div>\n    <ReactForm debug data={{\n      name: '\u54c8\u54c8\u54c8'\n    }} onSubmit={async (data) => {\n      await new Promise((resolve)=>{\n        setTimeout(() => {\n          resolve();\n        },3000);\n      });\n      console.log('submit:', data);\n    }}>\n      <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"REQ LEN-0-10\" />\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n",scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o}]},{title:"openApi",description:"\u5c55\u793aopenApi\u7684\u4f7f\u7528",code:"const { default: ReactForm, useField, useSubmit, useReset } = _ReactForm;\nconst { useRef } = React;\nconst { Button, Space } = antd;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n\n  return (<div>\n    {fieldProps.label}\n    <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? '\u6b63\u5728\u63d0\u4ea4\u4e2d...' : ''}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst BaseExample = () => {\n  const formApiRef = useRef();\n  return <div>\n    <Space>\n      <Button onClick={() => {\n        console.log(formApiRef.current.data);\n      }}>\u83b7\u53d6\u8868\u5355\u503c</Button>\n      <Button onClick={() => {\n        formApiRef.current.setField({ name: 'name', value: '\u54c8\u54c8\u54c8' });\n      }}>\u8bbe\u7f6e\u5b57\u6bb5\u503c</Button>\n      <Button onClick={() => {\n        formApiRef.current.setFields([{ name: 'name', value: '\u54c8\u54c8\u54c8' }, {\n          name: 'name2', value: '\u54c8\u54c8\u54c82'\n        }, { name: 'name3', value: '\u54c8\u54c8\u54c83' }]);\n      }}>\u8bbe\u7f6e\u591a\u4e2a\u5b57\u6bb5\u503c</Button>\n      <Button onClick={() => {\n        formApiRef.current.setFieldValidate({\n          name: 'name2', validate: { status: 2, msg: '\u6211\u662f\u4e00\u4e2a\u901a\u8fc7api\u8bbe\u7f6e\u7684\u9519\u8bef' }\n        });\n      }}>\u8bbe\u7f6e\u6821\u9a8c\u4fe1\u606f</Button>\n    </Space>\n    <ReactForm ref={formApiRef}>\n      <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"REQ LEN-0-10\" />\n      <Input name=\"name2\" label=\"\u540d\u79f02\" rule=\"REQ LEN-0-10\" />\n      <Input name=\"name3\" label=\"\u540d\u79f03\" rule=\"REQ LEN-0-10\" />\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n",scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o},{name:"antd",packageName:"antd",component:a}]},{title:"use-form-api",description:"\u5c55\u793auseFormApi\u7684\u4f7f\u7528",code:"const { default: ReactForm, useField, useSubmit, useReset, useFormApi } = _ReactForm;\nconst { useRef } = React;\nconst { Button, Space } = antd;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n  return (<div>\n    {fieldProps.label}\n    <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? '\u6b63\u5728\u63d0\u4ea4\u4e2d...' : ''}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst Options = () => {\n  const { openApi: formApi } = useFormApi();\n\n  console.log(formApi);\n\n  return <Space>\n    <Button onClick={() => {\n      console.log(formApi.getFormData());\n    }}>\u83b7\u53d6\u8868\u5355\u503c</Button>\n    <Button onClick={() => {\n      formApi.setField({ name: 'name', value: '\u54c8\u54c8\u54c8' });\n    }}>\u8bbe\u7f6e\u5b57\u6bb5\u503c</Button>\n    <Button onClick={() => {\n      formApi.setFields([{ name: 'name', value: '\u54c8\u54c8\u54c8' }, {\n        name: 'name2', value: '\u54c8\u54c8\u54c82'\n      }, { name: 'name3', value: '\u54c8\u54c8\u54c83' }]);\n    }}>\u8bbe\u7f6e\u591a\u4e2a\u5b57\u6bb5\u503c</Button>\n    <Button onClick={() => {\n      formApi.setFieldValidate({\n        name: 'name2', validate: { status: 2, msg: '\u6211\u662f\u4e00\u4e2a\u901a\u8fc7api\u8bbe\u7f6e\u7684\u9519\u8bef' }\n      });\n    }}>\u8bbe\u7f6e\u6821\u9a8c\u4fe1\u606f</Button>\n  </Space>;\n};\n\nconst BaseExample = () => {\n  const formApiRef = useRef();\n  return <div>\n    <ReactForm ref={formApiRef}>\n      <div><Options /></div>\n      <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"REQ LEN-0-10\" />\n      <Input name=\"name2\" label=\"\u540d\u79f02\" rule=\"REQ LEN-0-10\" />\n      <Input name=\"name3\" label=\"\u540d\u79f03\" rule=\"REQ LEN-0-10\" />\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n",scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o},{name:"antd",packageName:"antd",component:a}]},{title:"group",description:"\u5c55\u793agroup\u7684\u4f7f\u7528",code:"const { default: ReactForm, useField, useSubmit, useReset, GroupList } = _ReactForm;\nconst { useRef } = React;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n\n  return (<div>\n    {fieldProps.label}\n    <input ref={fieldProps.fieldRef} type=\"text\" value={fieldProps.value || ''} onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? '\u6b63\u5728\u63d0\u4ea4\u4e2d...' : ''}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst BaseExample = () => {\n  const ref = useRef();\n  const formApiRef = useRef();\n  return <div>\n    <div>\n      <button onClick={() => {\n        formApiRef.current.setField({\n          name: 'name', groupName: 'group', groupIndex: 0, value: '\u8bbe\u7f6egroup\u5b57\u6bb5\u503c'\n        });\n      }}>\n        \u8bbe\u7f6egroup\u7b2c\u4e00\u9879name\u5b57\u6bb5\u503c\n      </button>\n      <button onClick={() => {\n        formApiRef.current.setField({\n          name: 'name', groupName: 'group', value: '\u8bbe\u7f6egroup\u5b57\u6bb5\u503c'\n        });\n      }}>\n        \u8bbe\u7f6egroup\u6240\u6709\u9879name\u5b57\u6bb5\u503c\n      </button>\n      <button onClick={() => {\n        formApiRef.current.setField({\n          groupName: 'group', groupIndex: 0, value: {\n            name: '\u540d\u79f0', des: '\u8bf4\u660e'\n          }\n        });\n      }}>\n        \u8bbe\u7f6egroup\u7b2c\u4e00\u9879\u6240\u6709\u5b57\u6bb5\u503c\n      </button>\n      <button onClick={() => {\n        formApiRef.current.setFormData({\n          group: [{ name: '\u7b2c\u4e00\u9879' }, { name: '\u7b2c\u4e8c\u9879' }, { name: '\u7b2c\u4e09\u9879' }, { name: '\u7b2c\u56db\u9879' }, { name: '\u7b2c\u4e94\u9879' }]\n        });\n      }}>\u8bbe\u7f6e\u6574\u4e2a\u8868\u5355\u7684\u503c\n      </button>\n    </div>\n    <ReactForm ref={formApiRef} onSubmit={(data) => {\n      console.log('submit:', data);\n    }}>\n      <div>\n        <button onClick={() => {\n          ref.current.onAdd();\n        }}>\u5012\u5e8f\u6dfb\u52a0\n        </button>\n      </div>\n      <GroupList ref={ref} name=\"group\">{({ index, onRemove }) => {\n        return <div>\n          <div>\u7b2c{index + 1}\u9879</div>\n          <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"REQ LEN-0-10\" onChange={() => {\n            console.log(index);\n          }} />\n          <Input name=\"des\" label=\"\u63cf\u8ff0\" rule=\"LEN-0-10\" />\n          <GroupList name=\"inner\">{({ index, onRemove }) => {\n            return <div style={{\n              padding: '10px', background: '#eee'\n            }}>\n              <div>\u7b2c{index + 1}\u9879</div>\n              <Input name=\"name\" label=\"\u540d\u79f0\" rule=\"LEN-0-10\" />\n              <Input name=\"des\" label=\"\u63cf\u8ff0\" rule=\"LEN-0-10\" />\n              <button onClick={() => {\n                onRemove();\n              }}>\u5220\u9664\u5b50GroupItem\n              </button>\n            </div>;\n          }}</GroupList>\n          <button onClick={() => {\n            onRemove();\n          }}>\u5220\u9664\n          </button>\n        </div>;\n      }}</GroupList>\n      <button onClick={() => {\n        ref.current.onAdd({ isUnshift: false });\n      }}>\u987a\u5e8f\u6dfb\u52a0\n      </button>\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n",scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o},{name:"antd",packageName:"antd",component:a}]},{title:"associations",description:"\u5b57\u6bb5\u5173\u8054\u5173\u7cfb",code:'const { default: ReactForm, useField, useSubmit, useReset, GroupList } = _ReactForm;\n\nconst { useRef } = React;\n\nconst Input = props => {\n  const fieldProps = useField(props);\n\n  return (<div>\n    {fieldProps.label}\n    <input {...fieldProps.associationOptions} ref={fieldProps.fieldRef} type="text" value={fieldProps.value || \'\'}\n           onChange={fieldProps.onChange}\n           onBlur={fieldProps.triggerValidate} />\n    {fieldProps.errState}\n    {fieldProps.errMsg}\n  </div>);\n};\n\nconst SubmitButton = ({ children }) => {\n  const { isLoading, onClick } = useSubmit();\n  return (<button onClick={onClick}>\n    {children}\n    {isLoading ? \'\u6b63\u5728\u63d0\u4ea4\u4e2d...\' : \'\'}\n  </button>);\n};\n\nconst ResetButton = () => {\n  const { onClick } = useReset();\n  return <button onClick={onClick}>\u91cd\u7f6e</button>;\n};\n\nconst BaseExample = () => {\n  const ref = useRef(null);\n  return <div>\n    <ReactForm debug onSubmit={(data) => {\n      console.log(\'submit:\', data);\n    }}>\n      <Input name="name" label="\u540d\u79f0" rule="REQ LEN-0-10" />\n      <Input name="des" label="\u63cf\u8ff0" rule="LEN-0-10" associations={{\n        fields: [{\n          name: \'name\'\n        }], callback: ({ target, origin, openApi }) => {\n          openApi.setFieldValue(target, origin.value);\n        }\n      }} />\n      <hr />\n      <Input name="familyName" label="\u59d3" rule="REQ LEN-0-10" />\n      <Input name="firstName" label="\u540d" rule="REQ LEN-0-10" />\n      <Input name="fullName" label="\u5168\u540d" rule="REQ LEN-0-20" associations={{\n        fields: [{\n          name: \'familyName\'\n        }, {\n          name: \'firstName\'\n        }], callback: ({ target, openApi }) => {\n          const { firstName, familyName } = openApi.getFormData();\n          openApi.setFieldValue(target, firstName && firstName ? `${firstName} ${familyName}` : \'\');\n        }\n      }} />\n      <hr />\n      <Input name="money" label="\u91d1\u989d" />\n      <Input name="ratio" label="\u6bd4\u4f8b" />\n      <Input name="all" label="\u603b\u91d1\u989d" associations={{\n        fields: [{\n          name: \'money\'\n        }, {\n          name: \'ratio\'\n        }], callback: ({ target, openApi }) => {\n          const { money, ratio } = openApi.getFormData();\n          openApi.setFieldValue(target, money && ratio && ratio > 0 ? money / ratio : \'\');\n        }\n      }} />\n      <hr />\n      <div>\n        <button onClick={() => {\n          ref.current.onAdd();\n        }}>\u6dfb\u52a0\n        </button>\n      </div>\n      <GroupList ref={ref} name="group" defaultLength={1}>{({ index, onRemove }) => {\n        return <div>\n          <div>\u7b2c{index + 1}\u9879</div>\n          <Input name="sum" label="\u6570\u91cf" />\n          <button onClick={() => {\n            onRemove();\n          }}>\u5220\u9664\n          </button>\n        </div>;\n      }}</GroupList>\n      <Input name="amount" label="\u603b\u6570" associations={{\n        fields: [{\n          name: \'sum\', groupName: \'group\'\n        }], callback: ({ target, openApi }) => {\n          const { group } = openApi.getFormData();\n          openApi.setFieldValue(target, (group || []).filter((item) => item.sum > 0).reduce((a, b) => a + parseInt(b.sum), 0));\n        }\n      }} />\n      <div>\n        <SubmitButton>\u63d0\u4ea4</SubmitButton>\n        <ResetButton>\u91cd\u7f6e</ResetButton>\n      </div>\n    </ReactForm>\n  </div>;\n};\n\nrender(<BaseExample />);\n\n',scope:[{name:"_ReactForm",packageName:"@kne/current-lib_react-form",component:o},{name:"antd",packageName:"antd",component:a}]}]}}}}]);
//# sourceMappingURL=161.03d6f8b7.chunk.js.map